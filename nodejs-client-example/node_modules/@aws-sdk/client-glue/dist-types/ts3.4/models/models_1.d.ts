import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { GlueServiceException as __BaseException } from "./GlueServiceException";
import {
  Action,
  AuditContext,
  Blueprint,
  CodeGenEdge,
  CodeGenNode,
  CodeGenNodeArg,
  Column,
  Compatibility,
  ConnectionsList,
  ConnectionType,
  Crawler,
  CsvHeaderOption,
  DatabaseIdentifier,
  DataFormat,
  DataQualityRuleResult,
  DataQualityTargetTable,
  DataSource,
  DevEndpoint,
  ErrorDetail,
  EventBatchingCondition,
  GlueTable,
  JobRun,
  Partition,
  PartitionIndex,
  PartitionValueList,
  PhysicalConnectionRequirements,
  Predicate,
  PrincipalPermissions,
  RegistryId,
  SchemaId,
  SchemaStatus,
  SchemaVersionStatus,
  StorageDescriptor,
  TaskStatusType,
  TransformEncryption,
  TransformParameters,
  TransformType,
  Trigger,
  TriggerType,
  WorkerType,
  Workflow,
  WorkflowRun,
} from "./models_0";
export declare enum Language {
  PYTHON = "PYTHON",
  SCALA = "SCALA",
}
export interface CreateScriptRequest {
  DagNodes?: CodeGenNode[];
  DagEdges?: CodeGenEdge[];
  Language?: Language | string;
}
export interface CreateScriptResponse {
  PythonScript?: string;
  ScalaCode?: string;
}
export declare enum CloudWatchEncryptionMode {
  DISABLED = "DISABLED",
  SSEKMS = "SSE-KMS",
}
export interface CloudWatchEncryption {
  CloudWatchEncryptionMode?: CloudWatchEncryptionMode | string;
  KmsKeyArn?: string;
}
export declare enum JobBookmarksEncryptionMode {
  CSEKMS = "CSE-KMS",
  DISABLED = "DISABLED",
}
export interface JobBookmarksEncryption {
  JobBookmarksEncryptionMode?: JobBookmarksEncryptionMode | string;
  KmsKeyArn?: string;
}
export declare enum S3EncryptionMode {
  DISABLED = "DISABLED",
  SSEKMS = "SSE-KMS",
  SSES3 = "SSE-S3",
}
export interface S3Encryption {
  S3EncryptionMode?: S3EncryptionMode | string;
  KmsKeyArn?: string;
}
export interface EncryptionConfiguration {
  S3Encryption?: S3Encryption[];
  CloudWatchEncryption?: CloudWatchEncryption;
  JobBookmarksEncryption?: JobBookmarksEncryption;
}
export interface CreateSecurityConfigurationRequest {
  Name: string | undefined;
  EncryptionConfiguration: EncryptionConfiguration | undefined;
}
export interface CreateSecurityConfigurationResponse {
  Name?: string;
  CreatedTimestamp?: Date;
}
export interface SessionCommand {
  Name?: string;
  PythonVersion?: string;
}
export interface CreateSessionRequest {
  Id: string | undefined;
  Description?: string;
  Role: string | undefined;
  Command: SessionCommand | undefined;
  Timeout?: number;
  IdleTimeout?: number;
  DefaultArguments?: Record<string, string>;
  Connections?: ConnectionsList;
  MaxCapacity?: number;
  NumberOfWorkers?: number;
  WorkerType?: WorkerType | string;
  SecurityConfiguration?: string;
  GlueVersion?: string;
  Tags?: Record<string, string>;
  RequestOrigin?: string;
}
export declare enum SessionStatus {
  FAILED = "FAILED",
  PROVISIONING = "PROVISIONING",
  READY = "READY",
  STOPPED = "STOPPED",
  STOPPING = "STOPPING",
  TIMEOUT = "TIMEOUT",
}
export interface Session {
  Id?: string;
  CreatedOn?: Date;
  Status?: SessionStatus | string;
  ErrorMessage?: string;
  Description?: string;
  Role?: string;
  Command?: SessionCommand;
  DefaultArguments?: Record<string, string>;
  Connections?: ConnectionsList;
  Progress?: number;
  MaxCapacity?: number;
  SecurityConfiguration?: string;
  GlueVersion?: string;
}
export interface CreateSessionResponse {
  Session?: Session;
}
export interface TableIdentifier {
  CatalogId?: string;
  DatabaseName?: string;
  Name?: string;
}
export interface TableInput {
  Name: string | undefined;
  Description?: string;
  Owner?: string;
  LastAccessTime?: Date;
  LastAnalyzedTime?: Date;
  Retention?: number;
  StorageDescriptor?: StorageDescriptor;
  PartitionKeys?: Column[];
  ViewOriginalText?: string;
  ViewExpandedText?: string;
  TableType?: string;
  Parameters?: Record<string, string>;
  TargetTable?: TableIdentifier;
}
export interface CreateTableRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableInput: TableInput | undefined;
  PartitionIndexes?: PartitionIndex[];
  TransactionId?: string;
}
export interface CreateTableResponse {}
export interface CreateTriggerRequest {
  Name: string | undefined;
  WorkflowName?: string;
  Type: TriggerType | string | undefined;
  Schedule?: string;
  Predicate?: Predicate;
  Actions: Action[] | undefined;
  Description?: string;
  StartOnCreation?: boolean;
  Tags?: Record<string, string>;
  EventBatchingCondition?: EventBatchingCondition;
}
export interface CreateTriggerResponse {
  Name?: string;
}
export declare enum PrincipalType {
  GROUP = "GROUP",
  ROLE = "ROLE",
  USER = "USER",
}
export declare enum ResourceType {
  ARCHIVE = "ARCHIVE",
  FILE = "FILE",
  JAR = "JAR",
}
export interface ResourceUri {
  ResourceType?: ResourceType | string;
  Uri?: string;
}
export interface UserDefinedFunctionInput {
  FunctionName?: string;
  ClassName?: string;
  OwnerName?: string;
  OwnerType?: PrincipalType | string;
  ResourceUris?: ResourceUri[];
}
export interface CreateUserDefinedFunctionRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  FunctionInput: UserDefinedFunctionInput | undefined;
}
export interface CreateUserDefinedFunctionResponse {}
export interface CreateWorkflowRequest {
  Name: string | undefined;
  Description?: string;
  DefaultRunProperties?: Record<string, string>;
  Tags?: Record<string, string>;
  MaxConcurrentRuns?: number;
}
export interface CreateWorkflowResponse {
  Name?: string;
}
export interface DeleteBlueprintRequest {
  Name: string | undefined;
}
export interface DeleteBlueprintResponse {
  Name?: string;
}
export interface DeleteClassifierRequest {
  Name: string | undefined;
}
export interface DeleteClassifierResponse {}
export interface DeleteColumnStatisticsForPartitionRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  PartitionValues: string[] | undefined;
  ColumnName: string | undefined;
}
export interface DeleteColumnStatisticsForPartitionResponse {}
export interface DeleteColumnStatisticsForTableRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  ColumnName: string | undefined;
}
export interface DeleteColumnStatisticsForTableResponse {}
export interface DeleteConnectionRequest {
  CatalogId?: string;
  ConnectionName: string | undefined;
}
export interface DeleteConnectionResponse {}
export declare class CrawlerRunningException extends __BaseException {
  readonly name: "CrawlerRunningException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<CrawlerRunningException, __BaseException>
  );
}
export interface DeleteCrawlerRequest {
  Name: string | undefined;
}
export interface DeleteCrawlerResponse {}
export declare class SchedulerTransitioningException extends __BaseException {
  readonly name: "SchedulerTransitioningException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      SchedulerTransitioningException,
      __BaseException
    >
  );
}
export interface DeleteCustomEntityTypeRequest {
  Name: string | undefined;
}
export interface DeleteCustomEntityTypeResponse {
  Name?: string;
}
export interface DeleteDatabaseRequest {
  CatalogId?: string;
  Name: string | undefined;
}
export interface DeleteDatabaseResponse {}
export interface DeleteDataQualityRulesetRequest {
  Name: string | undefined;
}
export interface DeleteDataQualityRulesetResponse {}
export interface DeleteDevEndpointRequest {
  EndpointName: string | undefined;
}
export interface DeleteDevEndpointResponse {}
export interface DeleteJobRequest {
  JobName: string | undefined;
}
export interface DeleteJobResponse {
  JobName?: string;
}
export interface DeleteMLTransformRequest {
  TransformId: string | undefined;
}
export interface DeleteMLTransformResponse {
  TransformId?: string;
}
export interface DeletePartitionRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  PartitionValues: string[] | undefined;
}
export interface DeletePartitionResponse {}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface DeletePartitionIndexRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  IndexName: string | undefined;
}
export interface DeletePartitionIndexResponse {}
export interface DeleteRegistryInput {
  RegistryId: RegistryId | undefined;
}
export declare enum RegistryStatus {
  AVAILABLE = "AVAILABLE",
  DELETING = "DELETING",
}
export interface DeleteRegistryResponse {
  RegistryName?: string;
  RegistryArn?: string;
  Status?: RegistryStatus | string;
}
export declare class ConditionCheckFailureException extends __BaseException {
  readonly name: "ConditionCheckFailureException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ConditionCheckFailureException, __BaseException>
  );
}
export interface DeleteResourcePolicyRequest {
  PolicyHashCondition?: string;
  ResourceArn?: string;
}
export interface DeleteResourcePolicyResponse {}
export interface DeleteSchemaInput {
  SchemaId: SchemaId | undefined;
}
export interface DeleteSchemaResponse {
  SchemaArn?: string;
  SchemaName?: string;
  Status?: SchemaStatus | string;
}
export interface DeleteSchemaVersionsInput {
  SchemaId: SchemaId | undefined;
  Versions: string | undefined;
}
export interface ErrorDetails {
  ErrorCode?: string;
  ErrorMessage?: string;
}
export interface SchemaVersionErrorItem {
  VersionNumber?: number;
  ErrorDetails?: ErrorDetails;
}
export interface DeleteSchemaVersionsResponse {
  SchemaVersionErrors?: SchemaVersionErrorItem[];
}
export interface DeleteSecurityConfigurationRequest {
  Name: string | undefined;
}
export interface DeleteSecurityConfigurationResponse {}
export interface DeleteSessionRequest {
  Id: string | undefined;
  RequestOrigin?: string;
}
export interface DeleteSessionResponse {
  Id?: string;
}
export interface DeleteTableRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  Name: string | undefined;
  TransactionId?: string;
}
export interface DeleteTableResponse {}
export interface DeleteTableVersionRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  VersionId: string | undefined;
}
export interface DeleteTableVersionResponse {}
export interface DeleteTriggerRequest {
  Name: string | undefined;
}
export interface DeleteTriggerResponse {
  Name?: string;
}
export interface DeleteUserDefinedFunctionRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  FunctionName: string | undefined;
}
export interface DeleteUserDefinedFunctionResponse {}
export interface DeleteWorkflowRequest {
  Name: string | undefined;
}
export interface DeleteWorkflowResponse {
  Name?: string;
}
export interface GetBlueprintRequest {
  Name: string | undefined;
  IncludeBlueprint?: boolean;
  IncludeParameterSpec?: boolean;
}
export interface GetBlueprintResponse {
  Blueprint?: Blueprint;
}
export interface GetBlueprintRunRequest {
  BlueprintName: string | undefined;
  RunId: string | undefined;
}
export declare enum BlueprintRunState {
  FAILED = "FAILED",
  ROLLING_BACK = "ROLLING_BACK",
  RUNNING = "RUNNING",
  SUCCEEDED = "SUCCEEDED",
}
export interface BlueprintRun {
  BlueprintName?: string;
  RunId?: string;
  WorkflowName?: string;
  State?: BlueprintRunState | string;
  StartedOn?: Date;
  CompletedOn?: Date;
  ErrorMessage?: string;
  RollbackErrorMessage?: string;
  Parameters?: string;
  RoleArn?: string;
}
export interface GetBlueprintRunResponse {
  BlueprintRun?: BlueprintRun;
}
export interface GetBlueprintRunsRequest {
  BlueprintName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface GetBlueprintRunsResponse {
  BlueprintRuns?: BlueprintRun[];
  NextToken?: string;
}
export interface GetCatalogImportStatusRequest {
  CatalogId?: string;
}
export interface CatalogImportStatus {
  ImportCompleted?: boolean;
  ImportTime?: Date;
  ImportedBy?: string;
}
export interface GetCatalogImportStatusResponse {
  ImportStatus?: CatalogImportStatus;
}
export interface GetClassifierRequest {
  Name: string | undefined;
}
export interface CsvClassifier {
  Name: string | undefined;
  CreationTime?: Date;
  LastUpdated?: Date;
  Version?: number;
  Delimiter?: string;
  QuoteSymbol?: string;
  ContainsHeader?: CsvHeaderOption | string;
  Header?: string[];
  DisableValueTrimming?: boolean;
  AllowSingleColumn?: boolean;
  CustomDatatypeConfigured?: boolean;
  CustomDatatypes?: string[];
}
export interface GrokClassifier {
  Name: string | undefined;
  Classification: string | undefined;
  CreationTime?: Date;
  LastUpdated?: Date;
  Version?: number;
  GrokPattern: string | undefined;
  CustomPatterns?: string;
}
export interface JsonClassifier {
  Name: string | undefined;
  CreationTime?: Date;
  LastUpdated?: Date;
  Version?: number;
  JsonPath: string | undefined;
}
export interface XMLClassifier {
  Name: string | undefined;
  Classification: string | undefined;
  CreationTime?: Date;
  LastUpdated?: Date;
  Version?: number;
  RowTag?: string;
}
export interface Classifier {
  GrokClassifier?: GrokClassifier;
  XMLClassifier?: XMLClassifier;
  JsonClassifier?: JsonClassifier;
  CsvClassifier?: CsvClassifier;
}
export interface GetClassifierResponse {
  Classifier?: Classifier;
}
export interface GetClassifiersRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface GetClassifiersResponse {
  Classifiers?: Classifier[];
  NextToken?: string;
}
export interface GetColumnStatisticsForPartitionRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  PartitionValues: string[] | undefined;
  ColumnNames: string[] | undefined;
}
export interface BinaryColumnStatisticsData {
  MaximumLength: number | undefined;
  AverageLength: number | undefined;
  NumberOfNulls: number | undefined;
}
export interface BooleanColumnStatisticsData {
  NumberOfTrues: number | undefined;
  NumberOfFalses: number | undefined;
  NumberOfNulls: number | undefined;
}
export interface DateColumnStatisticsData {
  MinimumValue?: Date;
  MaximumValue?: Date;
  NumberOfNulls: number | undefined;
  NumberOfDistinctValues: number | undefined;
}
export interface DecimalNumber {
  UnscaledValue: Uint8Array | undefined;
  Scale: number | undefined;
}
export interface DecimalColumnStatisticsData {
  MinimumValue?: DecimalNumber;
  MaximumValue?: DecimalNumber;
  NumberOfNulls: number | undefined;
  NumberOfDistinctValues: number | undefined;
}
export interface DoubleColumnStatisticsData {
  MinimumValue?: number;
  MaximumValue?: number;
  NumberOfNulls: number | undefined;
  NumberOfDistinctValues: number | undefined;
}
export interface LongColumnStatisticsData {
  MinimumValue?: number;
  MaximumValue?: number;
  NumberOfNulls: number | undefined;
  NumberOfDistinctValues: number | undefined;
}
export interface StringColumnStatisticsData {
  MaximumLength: number | undefined;
  AverageLength: number | undefined;
  NumberOfNulls: number | undefined;
  NumberOfDistinctValues: number | undefined;
}
export declare enum ColumnStatisticsType {
  BINARY = "BINARY",
  BOOLEAN = "BOOLEAN",
  DATE = "DATE",
  DECIMAL = "DECIMAL",
  DOUBLE = "DOUBLE",
  LONG = "LONG",
  STRING = "STRING",
}
export interface ColumnStatisticsData {
  Type: ColumnStatisticsType | string | undefined;
  BooleanColumnStatisticsData?: BooleanColumnStatisticsData;
  DateColumnStatisticsData?: DateColumnStatisticsData;
  DecimalColumnStatisticsData?: DecimalColumnStatisticsData;
  DoubleColumnStatisticsData?: DoubleColumnStatisticsData;
  LongColumnStatisticsData?: LongColumnStatisticsData;
  StringColumnStatisticsData?: StringColumnStatisticsData;
  BinaryColumnStatisticsData?: BinaryColumnStatisticsData;
}
export interface ColumnStatistics {
  ColumnName: string | undefined;
  ColumnType: string | undefined;
  AnalyzedTime: Date | undefined;
  StatisticsData: ColumnStatisticsData | undefined;
}
export interface ColumnError {
  ColumnName?: string;
  Error?: ErrorDetail;
}
export interface GetColumnStatisticsForPartitionResponse {
  ColumnStatisticsList?: ColumnStatistics[];
  Errors?: ColumnError[];
}
export interface GetColumnStatisticsForTableRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  ColumnNames: string[] | undefined;
}
export interface GetColumnStatisticsForTableResponse {
  ColumnStatisticsList?: ColumnStatistics[];
  Errors?: ColumnError[];
}
export interface GetConnectionRequest {
  CatalogId?: string;
  Name: string | undefined;
  HidePassword?: boolean;
}
export interface Connection {
  Name?: string;
  Description?: string;
  ConnectionType?: ConnectionType | string;
  MatchCriteria?: string[];
  ConnectionProperties?: Record<string, string>;
  PhysicalConnectionRequirements?: PhysicalConnectionRequirements;
  CreationTime?: Date;
  LastUpdatedTime?: Date;
  LastUpdatedBy?: string;
}
export interface GetConnectionResponse {
  Connection?: Connection;
}
export interface GetConnectionsFilter {
  MatchCriteria?: string[];
  ConnectionType?: ConnectionType | string;
}
export interface GetConnectionsRequest {
  CatalogId?: string;
  Filter?: GetConnectionsFilter;
  HidePassword?: boolean;
  NextToken?: string;
  MaxResults?: number;
}
export interface GetConnectionsResponse {
  ConnectionList?: Connection[];
  NextToken?: string;
}
export interface GetCrawlerRequest {
  Name: string | undefined;
}
export interface GetCrawlerResponse {
  Crawler?: Crawler;
}
export interface GetCrawlerMetricsRequest {
  CrawlerNameList?: string[];
  MaxResults?: number;
  NextToken?: string;
}
export interface CrawlerMetrics {
  CrawlerName?: string;
  TimeLeftSeconds?: number;
  StillEstimating?: boolean;
  LastRuntimeSeconds?: number;
  MedianRuntimeSeconds?: number;
  TablesCreated?: number;
  TablesUpdated?: number;
  TablesDeleted?: number;
}
export interface GetCrawlerMetricsResponse {
  CrawlerMetricsList?: CrawlerMetrics[];
  NextToken?: string;
}
export interface GetCrawlersRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface GetCrawlersResponse {
  Crawlers?: Crawler[];
  NextToken?: string;
}
export interface GetCustomEntityTypeRequest {
  Name: string | undefined;
}
export interface GetCustomEntityTypeResponse {
  Name?: string;
  RegexString?: string;
  ContextWords?: string[];
}
export interface GetDatabaseRequest {
  CatalogId?: string;
  Name: string | undefined;
}
export interface Database {
  Name: string | undefined;
  Description?: string;
  LocationUri?: string;
  Parameters?: Record<string, string>;
  CreateTime?: Date;
  CreateTableDefaultPermissions?: PrincipalPermissions[];
  TargetDatabase?: DatabaseIdentifier;
  CatalogId?: string;
}
export interface GetDatabaseResponse {
  Database?: Database;
}
export declare enum ResourceShareType {
  ALL = "ALL",
  FOREIGN = "FOREIGN",
}
export interface GetDatabasesRequest {
  CatalogId?: string;
  NextToken?: string;
  MaxResults?: number;
  ResourceShareType?: ResourceShareType | string;
}
export interface GetDatabasesResponse {
  DatabaseList: Database[] | undefined;
  NextToken?: string;
}
export interface GetDataCatalogEncryptionSettingsRequest {
  CatalogId?: string;
}
export interface ConnectionPasswordEncryption {
  ReturnConnectionPasswordEncrypted: boolean | undefined;
  AwsKmsKeyId?: string;
}
export declare enum CatalogEncryptionMode {
  DISABLED = "DISABLED",
  SSEKMS = "SSE-KMS",
}
export interface EncryptionAtRest {
  CatalogEncryptionMode: CatalogEncryptionMode | string | undefined;
  SseAwsKmsKeyId?: string;
}
export interface DataCatalogEncryptionSettings {
  EncryptionAtRest?: EncryptionAtRest;
  ConnectionPasswordEncryption?: ConnectionPasswordEncryption;
}
export interface GetDataCatalogEncryptionSettingsResponse {
  DataCatalogEncryptionSettings?: DataCatalogEncryptionSettings;
}
export interface GetDataflowGraphRequest {
  PythonScript?: string;
}
export interface GetDataflowGraphResponse {
  DagNodes?: CodeGenNode[];
  DagEdges?: CodeGenEdge[];
}
export interface GetDataQualityResultRequest {
  ResultId: string | undefined;
}
export interface GetDataQualityResultResponse {
  ResultId?: string;
  Score?: number;
  DataSource?: DataSource;
  RulesetName?: string;
  EvaluationContext?: string;
  StartedOn?: Date;
  CompletedOn?: Date;
  JobName?: string;
  JobRunId?: string;
  RulesetEvaluationRunId?: string;
  RuleResults?: DataQualityRuleResult[];
}
export interface GetDataQualityRuleRecommendationRunRequest {
  RunId: string | undefined;
}
export interface GetDataQualityRuleRecommendationRunResponse {
  RunId?: string;
  DataSource?: DataSource;
  Role?: string;
  NumberOfWorkers?: number;
  Timeout?: number;
  Status?: TaskStatusType | string;
  ErrorString?: string;
  StartedOn?: Date;
  LastModifiedOn?: Date;
  CompletedOn?: Date;
  ExecutionTime?: number;
  RecommendedRuleset?: string;
  CreatedRulesetName?: string;
}
export interface GetDataQualityRulesetRequest {
  Name: string | undefined;
}
export interface GetDataQualityRulesetResponse {
  Name?: string;
  Description?: string;
  Ruleset?: string;
  TargetTable?: DataQualityTargetTable;
  CreatedOn?: Date;
  LastModifiedOn?: Date;
  RecommendationRunId?: string;
}
export interface GetDataQualityRulesetEvaluationRunRequest {
  RunId: string | undefined;
}
export interface DataQualityEvaluationRunAdditionalRunOptions {
  CloudWatchMetricsEnabled?: boolean;
  ResultsS3Prefix?: string;
}
export interface GetDataQualityRulesetEvaluationRunResponse {
  RunId?: string;
  DataSource?: DataSource;
  Role?: string;
  NumberOfWorkers?: number;
  Timeout?: number;
  AdditionalRunOptions?: DataQualityEvaluationRunAdditionalRunOptions;
  Status?: TaskStatusType | string;
  ErrorString?: string;
  StartedOn?: Date;
  LastModifiedOn?: Date;
  CompletedOn?: Date;
  ExecutionTime?: number;
  RulesetNames?: string[];
  ResultIds?: string[];
}
export interface GetDevEndpointRequest {
  EndpointName: string | undefined;
}
export interface GetDevEndpointResponse {
  DevEndpoint?: DevEndpoint;
}
export interface GetDevEndpointsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface GetDevEndpointsResponse {
  DevEndpoints?: DevEndpoint[];
  NextToken?: string;
}
export interface GetJobRequest {
  JobName: string | undefined;
}
export interface GetJobBookmarkRequest {
  JobName: string | undefined;
  RunId?: string;
}
export interface JobBookmarkEntry {
  JobName?: string;
  Version?: number;
  Run?: number;
  Attempt?: number;
  PreviousRunId?: string;
  RunId?: string;
  JobBookmark?: string;
}
export interface GetJobBookmarkResponse {
  JobBookmarkEntry?: JobBookmarkEntry;
}
export interface GetJobRunRequest {
  JobName: string | undefined;
  RunId: string | undefined;
  PredecessorsIncluded?: boolean;
}
export interface GetJobRunResponse {
  JobRun?: JobRun;
}
export interface GetJobRunsRequest {
  JobName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface GetJobRunsResponse {
  JobRuns?: JobRun[];
  NextToken?: string;
}
export interface GetJobsRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface Location {
  Jdbc?: CodeGenNodeArg[];
  S3?: CodeGenNodeArg[];
  DynamoDB?: CodeGenNodeArg[];
}
export interface CatalogEntry {
  DatabaseName: string | undefined;
  TableName: string | undefined;
}
export interface GetMappingRequest {
  Source: CatalogEntry | undefined;
  Sinks?: CatalogEntry[];
  Location?: Location;
}
export interface MappingEntry {
  SourceTable?: string;
  SourcePath?: string;
  SourceType?: string;
  TargetTable?: string;
  TargetPath?: string;
  TargetType?: string;
}
export interface GetMappingResponse {
  Mapping: MappingEntry[] | undefined;
}
export interface GetMLTaskRunRequest {
  TransformId: string | undefined;
  TaskRunId: string | undefined;
}
export interface ExportLabelsTaskRunProperties {
  OutputS3Path?: string;
}
export interface FindMatchesTaskRunProperties {
  JobId?: string;
  JobName?: string;
  JobRunId?: string;
}
export interface ImportLabelsTaskRunProperties {
  InputS3Path?: string;
  Replace?: boolean;
}
export interface LabelingSetGenerationTaskRunProperties {
  OutputS3Path?: string;
}
export declare enum TaskType {
  EVALUATION = "EVALUATION",
  EXPORT_LABELS = "EXPORT_LABELS",
  FIND_MATCHES = "FIND_MATCHES",
  IMPORT_LABELS = "IMPORT_LABELS",
  LABELING_SET_GENERATION = "LABELING_SET_GENERATION",
}
export interface TaskRunProperties {
  TaskType?: TaskType | string;
  ImportLabelsTaskRunProperties?: ImportLabelsTaskRunProperties;
  ExportLabelsTaskRunProperties?: ExportLabelsTaskRunProperties;
  LabelingSetGenerationTaskRunProperties?: LabelingSetGenerationTaskRunProperties;
  FindMatchesTaskRunProperties?: FindMatchesTaskRunProperties;
}
export interface GetMLTaskRunResponse {
  TransformId?: string;
  TaskRunId?: string;
  Status?: TaskStatusType | string;
  LogGroupName?: string;
  Properties?: TaskRunProperties;
  ErrorString?: string;
  StartedOn?: Date;
  LastModifiedOn?: Date;
  CompletedOn?: Date;
  ExecutionTime?: number;
}
export interface TaskRunFilterCriteria {
  TaskRunType?: TaskType | string;
  Status?: TaskStatusType | string;
  StartedBefore?: Date;
  StartedAfter?: Date;
}
export declare enum TaskRunSortColumnType {
  STARTED = "STARTED",
  STATUS = "STATUS",
  TASK_RUN_TYPE = "TASK_RUN_TYPE",
}
export declare enum SortDirectionType {
  ASCENDING = "ASCENDING",
  DESCENDING = "DESCENDING",
}
export interface TaskRunSortCriteria {
  Column: TaskRunSortColumnType | string | undefined;
  SortDirection: SortDirectionType | string | undefined;
}
export interface GetMLTaskRunsRequest {
  TransformId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  Filter?: TaskRunFilterCriteria;
  Sort?: TaskRunSortCriteria;
}
export interface TaskRun {
  TransformId?: string;
  TaskRunId?: string;
  Status?: TaskStatusType | string;
  LogGroupName?: string;
  Properties?: TaskRunProperties;
  ErrorString?: string;
  StartedOn?: Date;
  LastModifiedOn?: Date;
  CompletedOn?: Date;
  ExecutionTime?: number;
}
export interface GetMLTaskRunsResponse {
  TaskRuns?: TaskRun[];
  NextToken?: string;
}
export interface GetMLTransformRequest {
  TransformId: string | undefined;
}
export interface ColumnImportance {
  ColumnName?: string;
  Importance?: number;
}
export interface ConfusionMatrix {
  NumTruePositives?: number;
  NumFalsePositives?: number;
  NumTrueNegatives?: number;
  NumFalseNegatives?: number;
}
export interface FindMatchesMetrics {
  AreaUnderPRCurve?: number;
  Precision?: number;
  Recall?: number;
  F1?: number;
  ConfusionMatrix?: ConfusionMatrix;
  ColumnImportances?: ColumnImportance[];
}
export interface EvaluationMetrics {
  TransformType: TransformType | string | undefined;
  FindMatchesMetrics?: FindMatchesMetrics;
}
export interface SchemaColumn {
  Name?: string;
  DataType?: string;
}
export declare enum TransformStatusType {
  DELETING = "DELETING",
  NOT_READY = "NOT_READY",
  READY = "READY",
}
export interface GetMLTransformResponse {
  TransformId?: string;
  Name?: string;
  Description?: string;
  Status?: TransformStatusType | string;
  CreatedOn?: Date;
  LastModifiedOn?: Date;
  InputRecordTables?: GlueTable[];
  Parameters?: TransformParameters;
  EvaluationMetrics?: EvaluationMetrics;
  LabelCount?: number;
  Schema?: SchemaColumn[];
  Role?: string;
  GlueVersion?: string;
  MaxCapacity?: number;
  WorkerType?: WorkerType | string;
  NumberOfWorkers?: number;
  Timeout?: number;
  MaxRetries?: number;
  TransformEncryption?: TransformEncryption;
}
export interface TransformFilterCriteria {
  Name?: string;
  TransformType?: TransformType | string;
  Status?: TransformStatusType | string;
  GlueVersion?: string;
  CreatedBefore?: Date;
  CreatedAfter?: Date;
  LastModifiedBefore?: Date;
  LastModifiedAfter?: Date;
  Schema?: SchemaColumn[];
}
export declare enum TransformSortColumnType {
  CREATED = "CREATED",
  LAST_MODIFIED = "LAST_MODIFIED",
  NAME = "NAME",
  STATUS = "STATUS",
  TRANSFORM_TYPE = "TRANSFORM_TYPE",
}
export interface TransformSortCriteria {
  Column: TransformSortColumnType | string | undefined;
  SortDirection: SortDirectionType | string | undefined;
}
export interface GetMLTransformsRequest {
  NextToken?: string;
  MaxResults?: number;
  Filter?: TransformFilterCriteria;
  Sort?: TransformSortCriteria;
}
export interface MLTransform {
  TransformId?: string;
  Name?: string;
  Description?: string;
  Status?: TransformStatusType | string;
  CreatedOn?: Date;
  LastModifiedOn?: Date;
  InputRecordTables?: GlueTable[];
  Parameters?: TransformParameters;
  EvaluationMetrics?: EvaluationMetrics;
  LabelCount?: number;
  Schema?: SchemaColumn[];
  Role?: string;
  GlueVersion?: string;
  MaxCapacity?: number;
  WorkerType?: WorkerType | string;
  NumberOfWorkers?: number;
  Timeout?: number;
  MaxRetries?: number;
  TransformEncryption?: TransformEncryption;
}
export interface GetMLTransformsResponse {
  Transforms: MLTransform[] | undefined;
  NextToken?: string;
}
export interface GetPartitionRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  PartitionValues: string[] | undefined;
}
export interface GetPartitionResponse {
  Partition?: Partition;
}
export interface GetPartitionIndexesRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  NextToken?: string;
}
export declare enum BackfillErrorCode {
  ENCRYPTED_PARTITION_ERROR = "ENCRYPTED_PARTITION_ERROR",
  INTERNAL_ERROR = "INTERNAL_ERROR",
  INVALID_PARTITION_TYPE_DATA_ERROR = "INVALID_PARTITION_TYPE_DATA_ERROR",
  MISSING_PARTITION_VALUE_ERROR = "MISSING_PARTITION_VALUE_ERROR",
  UNSUPPORTED_PARTITION_CHARACTER_ERROR = "UNSUPPORTED_PARTITION_CHARACTER_ERROR",
}
export interface BackfillError {
  Code?: BackfillErrorCode | string;
  Partitions?: PartitionValueList[];
}
export declare enum PartitionIndexStatus {
  ACTIVE = "ACTIVE",
  CREATING = "CREATING",
  DELETING = "DELETING",
  FAILED = "FAILED",
}
export interface KeySchemaElement {
  Name: string | undefined;
  Type: string | undefined;
}
export interface PartitionIndexDescriptor {
  IndexName: string | undefined;
  Keys: KeySchemaElement[] | undefined;
  IndexStatus: PartitionIndexStatus | string | undefined;
  BackfillErrors?: BackfillError[];
}
export interface GetPartitionIndexesResponse {
  PartitionIndexDescriptorList?: PartitionIndexDescriptor[];
  NextToken?: string;
}
export interface Segment {
  SegmentNumber: number | undefined;
  TotalSegments: number | undefined;
}
export interface GetPartitionsRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  Expression?: string;
  NextToken?: string;
  Segment?: Segment;
  MaxResults?: number;
  ExcludeColumnSchema?: boolean;
  TransactionId?: string;
  QueryAsOfTime?: Date;
}
export interface GetPartitionsResponse {
  Partitions?: Partition[];
  NextToken?: string;
}
export interface GetPlanRequest {
  Mapping: MappingEntry[] | undefined;
  Source: CatalogEntry | undefined;
  Sinks?: CatalogEntry[];
  Location?: Location;
  Language?: Language | string;
  AdditionalPlanOptionsMap?: Record<string, string>;
}
export interface GetPlanResponse {
  PythonScript?: string;
  ScalaCode?: string;
}
export interface GetRegistryInput {
  RegistryId: RegistryId | undefined;
}
export interface GetRegistryResponse {
  RegistryName?: string;
  RegistryArn?: string;
  Description?: string;
  Status?: RegistryStatus | string;
  CreatedTime?: string;
  UpdatedTime?: string;
}
export interface GetResourcePoliciesRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface GluePolicy {
  PolicyInJson?: string;
  PolicyHash?: string;
  CreateTime?: Date;
  UpdateTime?: Date;
}
export interface GetResourcePoliciesResponse {
  GetResourcePoliciesResponseList?: GluePolicy[];
  NextToken?: string;
}
export interface GetResourcePolicyRequest {
  ResourceArn?: string;
}
export interface GetResourcePolicyResponse {
  PolicyInJson?: string;
  PolicyHash?: string;
  CreateTime?: Date;
  UpdateTime?: Date;
}
export interface GetSchemaInput {
  SchemaId: SchemaId | undefined;
}
export interface GetSchemaResponse {
  RegistryName?: string;
  RegistryArn?: string;
  SchemaName?: string;
  SchemaArn?: string;
  Description?: string;
  DataFormat?: DataFormat | string;
  Compatibility?: Compatibility | string;
  SchemaCheckpoint?: number;
  LatestSchemaVersion?: number;
  NextSchemaVersion?: number;
  SchemaStatus?: SchemaStatus | string;
  CreatedTime?: string;
  UpdatedTime?: string;
}
export interface GetSchemaByDefinitionInput {
  SchemaId: SchemaId | undefined;
  SchemaDefinition: string | undefined;
}
export interface GetSchemaByDefinitionResponse {
  SchemaVersionId?: string;
  SchemaArn?: string;
  DataFormat?: DataFormat | string;
  Status?: SchemaVersionStatus | string;
  CreatedTime?: string;
}
export interface SchemaVersionNumber {
  LatestVersion?: boolean;
  VersionNumber?: number;
}
export interface GetSchemaVersionInput {
  SchemaId?: SchemaId;
  SchemaVersionId?: string;
  SchemaVersionNumber?: SchemaVersionNumber;
}
export interface GetSchemaVersionResponse {
  SchemaVersionId?: string;
  SchemaDefinition?: string;
  DataFormat?: DataFormat | string;
  SchemaArn?: string;
  VersionNumber?: number;
  Status?: SchemaVersionStatus | string;
  CreatedTime?: string;
}
export declare enum SchemaDiffType {
  SYNTAX_DIFF = "SYNTAX_DIFF",
}
export interface GetSchemaVersionsDiffInput {
  SchemaId: SchemaId | undefined;
  FirstSchemaVersionNumber: SchemaVersionNumber | undefined;
  SecondSchemaVersionNumber: SchemaVersionNumber | undefined;
  SchemaDiffType: SchemaDiffType | string | undefined;
}
export interface GetSchemaVersionsDiffResponse {
  Diff?: string;
}
export interface GetSecurityConfigurationRequest {
  Name: string | undefined;
}
export interface SecurityConfiguration {
  Name?: string;
  CreatedTimeStamp?: Date;
  EncryptionConfiguration?: EncryptionConfiguration;
}
export interface GetSecurityConfigurationResponse {
  SecurityConfiguration?: SecurityConfiguration;
}
export interface GetSecurityConfigurationsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface GetSecurityConfigurationsResponse {
  SecurityConfigurations?: SecurityConfiguration[];
  NextToken?: string;
}
export interface GetSessionRequest {
  Id: string | undefined;
  RequestOrigin?: string;
}
export interface GetSessionResponse {
  Session?: Session;
}
export interface GetStatementRequest {
  SessionId: string | undefined;
  Id: number | undefined;
  RequestOrigin?: string;
}
export interface StatementOutputData {
  TextPlain?: string;
}
export declare enum StatementState {
  AVAILABLE = "AVAILABLE",
  CANCELLED = "CANCELLED",
  CANCELLING = "CANCELLING",
  ERROR = "ERROR",
  RUNNING = "RUNNING",
  WAITING = "WAITING",
}
export interface StatementOutput {
  Data?: StatementOutputData;
  ExecutionCount?: number;
  Status?: StatementState | string;
  ErrorName?: string;
  ErrorValue?: string;
  Traceback?: string[];
}
export interface Statement {
  Id?: number;
  Code?: string;
  State?: StatementState | string;
  Output?: StatementOutput;
  Progress?: number;
  StartedOn?: number;
  CompletedOn?: number;
}
export interface GetStatementResponse {
  Statement?: Statement;
}
export interface GetTableRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  Name: string | undefined;
  TransactionId?: string;
  QueryAsOfTime?: Date;
}
export interface Table {
  Name: string | undefined;
  DatabaseName?: string;
  Description?: string;
  Owner?: string;
  CreateTime?: Date;
  UpdateTime?: Date;
  LastAccessTime?: Date;
  LastAnalyzedTime?: Date;
  Retention?: number;
  StorageDescriptor?: StorageDescriptor;
  PartitionKeys?: Column[];
  ViewOriginalText?: string;
  ViewExpandedText?: string;
  TableType?: string;
  Parameters?: Record<string, string>;
  CreatedBy?: string;
  IsRegisteredWithLakeFormation?: boolean;
  TargetTable?: TableIdentifier;
  CatalogId?: string;
  VersionId?: string;
}
export interface GetTableResponse {
  Table?: Table;
}
export interface GetTablesRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  Expression?: string;
  NextToken?: string;
  MaxResults?: number;
  TransactionId?: string;
  QueryAsOfTime?: Date;
}
export interface GetTablesResponse {
  TableList?: Table[];
  NextToken?: string;
}
export interface GetTableVersionRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  VersionId?: string;
}
export interface TableVersion {
  Table?: Table;
  VersionId?: string;
}
export interface GetTableVersionResponse {
  TableVersion?: TableVersion;
}
export interface GetTableVersionsRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface GetTableVersionsResponse {
  TableVersions?: TableVersion[];
  NextToken?: string;
}
export interface GetTagsRequest {
  ResourceArn: string | undefined;
}
export interface GetTagsResponse {
  Tags?: Record<string, string>;
}
export interface GetTriggerRequest {
  Name: string | undefined;
}
export interface GetTriggerResponse {
  Trigger?: Trigger;
}
export interface GetTriggersRequest {
  NextToken?: string;
  DependentJobName?: string;
  MaxResults?: number;
}
export interface GetTriggersResponse {
  Triggers?: Trigger[];
  NextToken?: string;
}
export declare enum PermissionType {
  CELL_FILTER_PERMISSION = "CELL_FILTER_PERMISSION",
  COLUMN_PERMISSION = "COLUMN_PERMISSION",
}
export interface GetUnfilteredPartitionMetadataRequest {
  CatalogId: string | undefined;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  PartitionValues: string[] | undefined;
  AuditContext?: AuditContext;
  SupportedPermissionTypes: (PermissionType | string)[] | undefined;
}
export interface GetUnfilteredPartitionMetadataResponse {
  Partition?: Partition;
  AuthorizedColumns?: string[];
  IsRegisteredWithLakeFormation?: boolean;
}
export declare class PermissionTypeMismatchException extends __BaseException {
  readonly name: "PermissionTypeMismatchException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      PermissionTypeMismatchException,
      __BaseException
    >
  );
}
export interface GetUnfilteredPartitionsMetadataRequest {
  CatalogId: string | undefined;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  Expression?: string;
  AuditContext?: AuditContext;
  SupportedPermissionTypes: (PermissionType | string)[] | undefined;
  NextToken?: string;
  Segment?: Segment;
  MaxResults?: number;
}
export interface UnfilteredPartition {
  Partition?: Partition;
  AuthorizedColumns?: string[];
  IsRegisteredWithLakeFormation?: boolean;
}
export interface GetUnfilteredPartitionsMetadataResponse {
  UnfilteredPartitions?: UnfilteredPartition[];
  NextToken?: string;
}
export interface GetUnfilteredTableMetadataRequest {
  CatalogId: string | undefined;
  DatabaseName: string | undefined;
  Name: string | undefined;
  AuditContext?: AuditContext;
  SupportedPermissionTypes: (PermissionType | string)[] | undefined;
}
export interface ColumnRowFilter {
  ColumnName?: string;
  RowFilterExpression?: string;
}
export interface GetUnfilteredTableMetadataResponse {
  Table?: Table;
  AuthorizedColumns?: string[];
  IsRegisteredWithLakeFormation?: boolean;
  CellFilters?: ColumnRowFilter[];
}
export interface GetUserDefinedFunctionRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  FunctionName: string | undefined;
}
export interface UserDefinedFunction {
  FunctionName?: string;
  DatabaseName?: string;
  ClassName?: string;
  OwnerName?: string;
  OwnerType?: PrincipalType | string;
  CreateTime?: Date;
  ResourceUris?: ResourceUri[];
  CatalogId?: string;
}
export interface GetUserDefinedFunctionResponse {
  UserDefinedFunction?: UserDefinedFunction;
}
export interface GetUserDefinedFunctionsRequest {
  CatalogId?: string;
  DatabaseName?: string;
  Pattern: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface GetUserDefinedFunctionsResponse {
  UserDefinedFunctions?: UserDefinedFunction[];
  NextToken?: string;
}
export interface GetWorkflowRequest {
  Name: string | undefined;
  IncludeGraph?: boolean;
}
export interface GetWorkflowResponse {
  Workflow?: Workflow;
}
export interface GetWorkflowRunRequest {
  Name: string | undefined;
  RunId: string | undefined;
  IncludeGraph?: boolean;
}
export interface GetWorkflowRunResponse {
  Run?: WorkflowRun;
}
export interface GetWorkflowRunPropertiesRequest {
  Name: string | undefined;
  RunId: string | undefined;
}
export interface GetWorkflowRunPropertiesResponse {
  RunProperties?: Record<string, string>;
}
export interface GetWorkflowRunsRequest {
  Name: string | undefined;
  IncludeGraph?: boolean;
  NextToken?: string;
  MaxResults?: number;
}
export interface GetWorkflowRunsResponse {
  Runs?: WorkflowRun[];
  NextToken?: string;
}
export interface ImportCatalogToGlueRequest {
  CatalogId?: string;
}
export interface ImportCatalogToGlueResponse {}
export interface ListBlueprintsRequest {
  NextToken?: string;
  MaxResults?: number;
  Tags?: Record<string, string>;
}
export interface ListBlueprintsResponse {
  Blueprints?: string[];
  NextToken?: string;
}
export interface ListCrawlersRequest {
  MaxResults?: number;
  NextToken?: string;
  Tags?: Record<string, string>;
}
export interface ListCrawlersResponse {
  CrawlerNames?: string[];
  NextToken?: string;
}
export declare enum FieldName {
  CRAWL_ID = "CRAWL_ID",
  DPU_HOUR = "DPU_HOUR",
  END_TIME = "END_TIME",
  START_TIME = "START_TIME",
  STATE = "STATE",
}
export declare enum FilterOperator {
  EQ = "EQ",
  GE = "GE",
  GT = "GT",
  LE = "LE",
  LT = "LT",
  NE = "NE",
}
export declare const CreateScriptRequestFilterSensitiveLog: (
  obj: CreateScriptRequest
) => any;
export declare const CreateScriptResponseFilterSensitiveLog: (
  obj: CreateScriptResponse
) => any;
export declare const CloudWatchEncryptionFilterSensitiveLog: (
  obj: CloudWatchEncryption
) => any;
export declare const JobBookmarksEncryptionFilterSensitiveLog: (
  obj: JobBookmarksEncryption
) => any;
export declare const S3EncryptionFilterSensitiveLog: (obj: S3Encryption) => any;
export declare const EncryptionConfigurationFilterSensitiveLog: (
  obj: EncryptionConfiguration
) => any;
export declare const CreateSecurityConfigurationRequestFilterSensitiveLog: (
  obj: CreateSecurityConfigurationRequest
) => any;
export declare const CreateSecurityConfigurationResponseFilterSensitiveLog: (
  obj: CreateSecurityConfigurationResponse
) => any;
export declare const SessionCommandFilterSensitiveLog: (
  obj: SessionCommand
) => any;
export declare const CreateSessionRequestFilterSensitiveLog: (
  obj: CreateSessionRequest
) => any;
export declare const SessionFilterSensitiveLog: (obj: Session) => any;
export declare const CreateSessionResponseFilterSensitiveLog: (
  obj: CreateSessionResponse
) => any;
export declare const TableIdentifierFilterSensitiveLog: (
  obj: TableIdentifier
) => any;
export declare const TableInputFilterSensitiveLog: (obj: TableInput) => any;
export declare const CreateTableRequestFilterSensitiveLog: (
  obj: CreateTableRequest
) => any;
export declare const CreateTableResponseFilterSensitiveLog: (
  obj: CreateTableResponse
) => any;
export declare const CreateTriggerRequestFilterSensitiveLog: (
  obj: CreateTriggerRequest
) => any;
export declare const CreateTriggerResponseFilterSensitiveLog: (
  obj: CreateTriggerResponse
) => any;
export declare const ResourceUriFilterSensitiveLog: (obj: ResourceUri) => any;
export declare const UserDefinedFunctionInputFilterSensitiveLog: (
  obj: UserDefinedFunctionInput
) => any;
export declare const CreateUserDefinedFunctionRequestFilterSensitiveLog: (
  obj: CreateUserDefinedFunctionRequest
) => any;
export declare const CreateUserDefinedFunctionResponseFilterSensitiveLog: (
  obj: CreateUserDefinedFunctionResponse
) => any;
export declare const CreateWorkflowRequestFilterSensitiveLog: (
  obj: CreateWorkflowRequest
) => any;
export declare const CreateWorkflowResponseFilterSensitiveLog: (
  obj: CreateWorkflowResponse
) => any;
export declare const DeleteBlueprintRequestFilterSensitiveLog: (
  obj: DeleteBlueprintRequest
) => any;
export declare const DeleteBlueprintResponseFilterSensitiveLog: (
  obj: DeleteBlueprintResponse
) => any;
export declare const DeleteClassifierRequestFilterSensitiveLog: (
  obj: DeleteClassifierRequest
) => any;
export declare const DeleteClassifierResponseFilterSensitiveLog: (
  obj: DeleteClassifierResponse
) => any;
export declare const DeleteColumnStatisticsForPartitionRequestFilterSensitiveLog: (
  obj: DeleteColumnStatisticsForPartitionRequest
) => any;
export declare const DeleteColumnStatisticsForPartitionResponseFilterSensitiveLog: (
  obj: DeleteColumnStatisticsForPartitionResponse
) => any;
export declare const DeleteColumnStatisticsForTableRequestFilterSensitiveLog: (
  obj: DeleteColumnStatisticsForTableRequest
) => any;
export declare const DeleteColumnStatisticsForTableResponseFilterSensitiveLog: (
  obj: DeleteColumnStatisticsForTableResponse
) => any;
export declare const DeleteConnectionRequestFilterSensitiveLog: (
  obj: DeleteConnectionRequest
) => any;
export declare const DeleteConnectionResponseFilterSensitiveLog: (
  obj: DeleteConnectionResponse
) => any;
export declare const DeleteCrawlerRequestFilterSensitiveLog: (
  obj: DeleteCrawlerRequest
) => any;
export declare const DeleteCrawlerResponseFilterSensitiveLog: (
  obj: DeleteCrawlerResponse
) => any;
export declare const DeleteCustomEntityTypeRequestFilterSensitiveLog: (
  obj: DeleteCustomEntityTypeRequest
) => any;
export declare const DeleteCustomEntityTypeResponseFilterSensitiveLog: (
  obj: DeleteCustomEntityTypeResponse
) => any;
export declare const DeleteDatabaseRequestFilterSensitiveLog: (
  obj: DeleteDatabaseRequest
) => any;
export declare const DeleteDatabaseResponseFilterSensitiveLog: (
  obj: DeleteDatabaseResponse
) => any;
export declare const DeleteDataQualityRulesetRequestFilterSensitiveLog: (
  obj: DeleteDataQualityRulesetRequest
) => any;
export declare const DeleteDataQualityRulesetResponseFilterSensitiveLog: (
  obj: DeleteDataQualityRulesetResponse
) => any;
export declare const DeleteDevEndpointRequestFilterSensitiveLog: (
  obj: DeleteDevEndpointRequest
) => any;
export declare const DeleteDevEndpointResponseFilterSensitiveLog: (
  obj: DeleteDevEndpointResponse
) => any;
export declare const DeleteJobRequestFilterSensitiveLog: (
  obj: DeleteJobRequest
) => any;
export declare const DeleteJobResponseFilterSensitiveLog: (
  obj: DeleteJobResponse
) => any;
export declare const DeleteMLTransformRequestFilterSensitiveLog: (
  obj: DeleteMLTransformRequest
) => any;
export declare const DeleteMLTransformResponseFilterSensitiveLog: (
  obj: DeleteMLTransformResponse
) => any;
export declare const DeletePartitionRequestFilterSensitiveLog: (
  obj: DeletePartitionRequest
) => any;
export declare const DeletePartitionResponseFilterSensitiveLog: (
  obj: DeletePartitionResponse
) => any;
export declare const DeletePartitionIndexRequestFilterSensitiveLog: (
  obj: DeletePartitionIndexRequest
) => any;
export declare const DeletePartitionIndexResponseFilterSensitiveLog: (
  obj: DeletePartitionIndexResponse
) => any;
export declare const DeleteRegistryInputFilterSensitiveLog: (
  obj: DeleteRegistryInput
) => any;
export declare const DeleteRegistryResponseFilterSensitiveLog: (
  obj: DeleteRegistryResponse
) => any;
export declare const DeleteResourcePolicyRequestFilterSensitiveLog: (
  obj: DeleteResourcePolicyRequest
) => any;
export declare const DeleteResourcePolicyResponseFilterSensitiveLog: (
  obj: DeleteResourcePolicyResponse
) => any;
export declare const DeleteSchemaInputFilterSensitiveLog: (
  obj: DeleteSchemaInput
) => any;
export declare const DeleteSchemaResponseFilterSensitiveLog: (
  obj: DeleteSchemaResponse
) => any;
export declare const DeleteSchemaVersionsInputFilterSensitiveLog: (
  obj: DeleteSchemaVersionsInput
) => any;
export declare const ErrorDetailsFilterSensitiveLog: (obj: ErrorDetails) => any;
export declare const SchemaVersionErrorItemFilterSensitiveLog: (
  obj: SchemaVersionErrorItem
) => any;
export declare const DeleteSchemaVersionsResponseFilterSensitiveLog: (
  obj: DeleteSchemaVersionsResponse
) => any;
export declare const DeleteSecurityConfigurationRequestFilterSensitiveLog: (
  obj: DeleteSecurityConfigurationRequest
) => any;
export declare const DeleteSecurityConfigurationResponseFilterSensitiveLog: (
  obj: DeleteSecurityConfigurationResponse
) => any;
export declare const DeleteSessionRequestFilterSensitiveLog: (
  obj: DeleteSessionRequest
) => any;
export declare const DeleteSessionResponseFilterSensitiveLog: (
  obj: DeleteSessionResponse
) => any;
export declare const DeleteTableRequestFilterSensitiveLog: (
  obj: DeleteTableRequest
) => any;
export declare const DeleteTableResponseFilterSensitiveLog: (
  obj: DeleteTableResponse
) => any;
export declare const DeleteTableVersionRequestFilterSensitiveLog: (
  obj: DeleteTableVersionRequest
) => any;
export declare const DeleteTableVersionResponseFilterSensitiveLog: (
  obj: DeleteTableVersionResponse
) => any;
export declare const DeleteTriggerRequestFilterSensitiveLog: (
  obj: DeleteTriggerRequest
) => any;
export declare const DeleteTriggerResponseFilterSensitiveLog: (
  obj: DeleteTriggerResponse
) => any;
export declare const DeleteUserDefinedFunctionRequestFilterSensitiveLog: (
  obj: DeleteUserDefinedFunctionRequest
) => any;
export declare const DeleteUserDefinedFunctionResponseFilterSensitiveLog: (
  obj: DeleteUserDefinedFunctionResponse
) => any;
export declare const DeleteWorkflowRequestFilterSensitiveLog: (
  obj: DeleteWorkflowRequest
) => any;
export declare const DeleteWorkflowResponseFilterSensitiveLog: (
  obj: DeleteWorkflowResponse
) => any;
export declare const GetBlueprintRequestFilterSensitiveLog: (
  obj: GetBlueprintRequest
) => any;
export declare const GetBlueprintResponseFilterSensitiveLog: (
  obj: GetBlueprintResponse
) => any;
export declare const GetBlueprintRunRequestFilterSensitiveLog: (
  obj: GetBlueprintRunRequest
) => any;
export declare const BlueprintRunFilterSensitiveLog: (obj: BlueprintRun) => any;
export declare const GetBlueprintRunResponseFilterSensitiveLog: (
  obj: GetBlueprintRunResponse
) => any;
export declare const GetBlueprintRunsRequestFilterSensitiveLog: (
  obj: GetBlueprintRunsRequest
) => any;
export declare const GetBlueprintRunsResponseFilterSensitiveLog: (
  obj: GetBlueprintRunsResponse
) => any;
export declare const GetCatalogImportStatusRequestFilterSensitiveLog: (
  obj: GetCatalogImportStatusRequest
) => any;
export declare const CatalogImportStatusFilterSensitiveLog: (
  obj: CatalogImportStatus
) => any;
export declare const GetCatalogImportStatusResponseFilterSensitiveLog: (
  obj: GetCatalogImportStatusResponse
) => any;
export declare const GetClassifierRequestFilterSensitiveLog: (
  obj: GetClassifierRequest
) => any;
export declare const CsvClassifierFilterSensitiveLog: (
  obj: CsvClassifier
) => any;
export declare const GrokClassifierFilterSensitiveLog: (
  obj: GrokClassifier
) => any;
export declare const JsonClassifierFilterSensitiveLog: (
  obj: JsonClassifier
) => any;
export declare const XMLClassifierFilterSensitiveLog: (
  obj: XMLClassifier
) => any;
export declare const ClassifierFilterSensitiveLog: (obj: Classifier) => any;
export declare const GetClassifierResponseFilterSensitiveLog: (
  obj: GetClassifierResponse
) => any;
export declare const GetClassifiersRequestFilterSensitiveLog: (
  obj: GetClassifiersRequest
) => any;
export declare const GetClassifiersResponseFilterSensitiveLog: (
  obj: GetClassifiersResponse
) => any;
export declare const GetColumnStatisticsForPartitionRequestFilterSensitiveLog: (
  obj: GetColumnStatisticsForPartitionRequest
) => any;
export declare const BinaryColumnStatisticsDataFilterSensitiveLog: (
  obj: BinaryColumnStatisticsData
) => any;
export declare const BooleanColumnStatisticsDataFilterSensitiveLog: (
  obj: BooleanColumnStatisticsData
) => any;
export declare const DateColumnStatisticsDataFilterSensitiveLog: (
  obj: DateColumnStatisticsData
) => any;
export declare const DecimalNumberFilterSensitiveLog: (
  obj: DecimalNumber
) => any;
export declare const DecimalColumnStatisticsDataFilterSensitiveLog: (
  obj: DecimalColumnStatisticsData
) => any;
export declare const DoubleColumnStatisticsDataFilterSensitiveLog: (
  obj: DoubleColumnStatisticsData
) => any;
export declare const LongColumnStatisticsDataFilterSensitiveLog: (
  obj: LongColumnStatisticsData
) => any;
export declare const StringColumnStatisticsDataFilterSensitiveLog: (
  obj: StringColumnStatisticsData
) => any;
export declare const ColumnStatisticsDataFilterSensitiveLog: (
  obj: ColumnStatisticsData
) => any;
export declare const ColumnStatisticsFilterSensitiveLog: (
  obj: ColumnStatistics
) => any;
export declare const ColumnErrorFilterSensitiveLog: (obj: ColumnError) => any;
export declare const GetColumnStatisticsForPartitionResponseFilterSensitiveLog: (
  obj: GetColumnStatisticsForPartitionResponse
) => any;
export declare const GetColumnStatisticsForTableRequestFilterSensitiveLog: (
  obj: GetColumnStatisticsForTableRequest
) => any;
export declare const GetColumnStatisticsForTableResponseFilterSensitiveLog: (
  obj: GetColumnStatisticsForTableResponse
) => any;
export declare const GetConnectionRequestFilterSensitiveLog: (
  obj: GetConnectionRequest
) => any;
export declare const ConnectionFilterSensitiveLog: (obj: Connection) => any;
export declare const GetConnectionResponseFilterSensitiveLog: (
  obj: GetConnectionResponse
) => any;
export declare const GetConnectionsFilterFilterSensitiveLog: (
  obj: GetConnectionsFilter
) => any;
export declare const GetConnectionsRequestFilterSensitiveLog: (
  obj: GetConnectionsRequest
) => any;
export declare const GetConnectionsResponseFilterSensitiveLog: (
  obj: GetConnectionsResponse
) => any;
export declare const GetCrawlerRequestFilterSensitiveLog: (
  obj: GetCrawlerRequest
) => any;
export declare const GetCrawlerResponseFilterSensitiveLog: (
  obj: GetCrawlerResponse
) => any;
export declare const GetCrawlerMetricsRequestFilterSensitiveLog: (
  obj: GetCrawlerMetricsRequest
) => any;
export declare const CrawlerMetricsFilterSensitiveLog: (
  obj: CrawlerMetrics
) => any;
export declare const GetCrawlerMetricsResponseFilterSensitiveLog: (
  obj: GetCrawlerMetricsResponse
) => any;
export declare const GetCrawlersRequestFilterSensitiveLog: (
  obj: GetCrawlersRequest
) => any;
export declare const GetCrawlersResponseFilterSensitiveLog: (
  obj: GetCrawlersResponse
) => any;
export declare const GetCustomEntityTypeRequestFilterSensitiveLog: (
  obj: GetCustomEntityTypeRequest
) => any;
export declare const GetCustomEntityTypeResponseFilterSensitiveLog: (
  obj: GetCustomEntityTypeResponse
) => any;
export declare const GetDatabaseRequestFilterSensitiveLog: (
  obj: GetDatabaseRequest
) => any;
export declare const DatabaseFilterSensitiveLog: (obj: Database) => any;
export declare const GetDatabaseResponseFilterSensitiveLog: (
  obj: GetDatabaseResponse
) => any;
export declare const GetDatabasesRequestFilterSensitiveLog: (
  obj: GetDatabasesRequest
) => any;
export declare const GetDatabasesResponseFilterSensitiveLog: (
  obj: GetDatabasesResponse
) => any;
export declare const GetDataCatalogEncryptionSettingsRequestFilterSensitiveLog: (
  obj: GetDataCatalogEncryptionSettingsRequest
) => any;
export declare const ConnectionPasswordEncryptionFilterSensitiveLog: (
  obj: ConnectionPasswordEncryption
) => any;
export declare const EncryptionAtRestFilterSensitiveLog: (
  obj: EncryptionAtRest
) => any;
export declare const DataCatalogEncryptionSettingsFilterSensitiveLog: (
  obj: DataCatalogEncryptionSettings
) => any;
export declare const GetDataCatalogEncryptionSettingsResponseFilterSensitiveLog: (
  obj: GetDataCatalogEncryptionSettingsResponse
) => any;
export declare const GetDataflowGraphRequestFilterSensitiveLog: (
  obj: GetDataflowGraphRequest
) => any;
export declare const GetDataflowGraphResponseFilterSensitiveLog: (
  obj: GetDataflowGraphResponse
) => any;
export declare const GetDataQualityResultRequestFilterSensitiveLog: (
  obj: GetDataQualityResultRequest
) => any;
export declare const GetDataQualityResultResponseFilterSensitiveLog: (
  obj: GetDataQualityResultResponse
) => any;
export declare const GetDataQualityRuleRecommendationRunRequestFilterSensitiveLog: (
  obj: GetDataQualityRuleRecommendationRunRequest
) => any;
export declare const GetDataQualityRuleRecommendationRunResponseFilterSensitiveLog: (
  obj: GetDataQualityRuleRecommendationRunResponse
) => any;
export declare const GetDataQualityRulesetRequestFilterSensitiveLog: (
  obj: GetDataQualityRulesetRequest
) => any;
export declare const GetDataQualityRulesetResponseFilterSensitiveLog: (
  obj: GetDataQualityRulesetResponse
) => any;
export declare const GetDataQualityRulesetEvaluationRunRequestFilterSensitiveLog: (
  obj: GetDataQualityRulesetEvaluationRunRequest
) => any;
export declare const DataQualityEvaluationRunAdditionalRunOptionsFilterSensitiveLog: (
  obj: DataQualityEvaluationRunAdditionalRunOptions
) => any;
export declare const GetDataQualityRulesetEvaluationRunResponseFilterSensitiveLog: (
  obj: GetDataQualityRulesetEvaluationRunResponse
) => any;
export declare const GetDevEndpointRequestFilterSensitiveLog: (
  obj: GetDevEndpointRequest
) => any;
export declare const GetDevEndpointResponseFilterSensitiveLog: (
  obj: GetDevEndpointResponse
) => any;
export declare const GetDevEndpointsRequestFilterSensitiveLog: (
  obj: GetDevEndpointsRequest
) => any;
export declare const GetDevEndpointsResponseFilterSensitiveLog: (
  obj: GetDevEndpointsResponse
) => any;
export declare const GetJobRequestFilterSensitiveLog: (
  obj: GetJobRequest
) => any;
export declare const GetJobBookmarkRequestFilterSensitiveLog: (
  obj: GetJobBookmarkRequest
) => any;
export declare const JobBookmarkEntryFilterSensitiveLog: (
  obj: JobBookmarkEntry
) => any;
export declare const GetJobBookmarkResponseFilterSensitiveLog: (
  obj: GetJobBookmarkResponse
) => any;
export declare const GetJobRunRequestFilterSensitiveLog: (
  obj: GetJobRunRequest
) => any;
export declare const GetJobRunResponseFilterSensitiveLog: (
  obj: GetJobRunResponse
) => any;
export declare const GetJobRunsRequestFilterSensitiveLog: (
  obj: GetJobRunsRequest
) => any;
export declare const GetJobRunsResponseFilterSensitiveLog: (
  obj: GetJobRunsResponse
) => any;
export declare const GetJobsRequestFilterSensitiveLog: (
  obj: GetJobsRequest
) => any;
export declare const LocationFilterSensitiveLog: (obj: Location) => any;
export declare const CatalogEntryFilterSensitiveLog: (obj: CatalogEntry) => any;
export declare const GetMappingRequestFilterSensitiveLog: (
  obj: GetMappingRequest
) => any;
export declare const MappingEntryFilterSensitiveLog: (obj: MappingEntry) => any;
export declare const GetMappingResponseFilterSensitiveLog: (
  obj: GetMappingResponse
) => any;
export declare const GetMLTaskRunRequestFilterSensitiveLog: (
  obj: GetMLTaskRunRequest
) => any;
export declare const ExportLabelsTaskRunPropertiesFilterSensitiveLog: (
  obj: ExportLabelsTaskRunProperties
) => any;
export declare const FindMatchesTaskRunPropertiesFilterSensitiveLog: (
  obj: FindMatchesTaskRunProperties
) => any;
export declare const ImportLabelsTaskRunPropertiesFilterSensitiveLog: (
  obj: ImportLabelsTaskRunProperties
) => any;
export declare const LabelingSetGenerationTaskRunPropertiesFilterSensitiveLog: (
  obj: LabelingSetGenerationTaskRunProperties
) => any;
export declare const TaskRunPropertiesFilterSensitiveLog: (
  obj: TaskRunProperties
) => any;
export declare const GetMLTaskRunResponseFilterSensitiveLog: (
  obj: GetMLTaskRunResponse
) => any;
export declare const TaskRunFilterCriteriaFilterSensitiveLog: (
  obj: TaskRunFilterCriteria
) => any;
export declare const TaskRunSortCriteriaFilterSensitiveLog: (
  obj: TaskRunSortCriteria
) => any;
export declare const GetMLTaskRunsRequestFilterSensitiveLog: (
  obj: GetMLTaskRunsRequest
) => any;
export declare const TaskRunFilterSensitiveLog: (obj: TaskRun) => any;
export declare const GetMLTaskRunsResponseFilterSensitiveLog: (
  obj: GetMLTaskRunsResponse
) => any;
export declare const GetMLTransformRequestFilterSensitiveLog: (
  obj: GetMLTransformRequest
) => any;
export declare const ColumnImportanceFilterSensitiveLog: (
  obj: ColumnImportance
) => any;
export declare const ConfusionMatrixFilterSensitiveLog: (
  obj: ConfusionMatrix
) => any;
export declare const FindMatchesMetricsFilterSensitiveLog: (
  obj: FindMatchesMetrics
) => any;
export declare const EvaluationMetricsFilterSensitiveLog: (
  obj: EvaluationMetrics
) => any;
export declare const SchemaColumnFilterSensitiveLog: (obj: SchemaColumn) => any;
export declare const GetMLTransformResponseFilterSensitiveLog: (
  obj: GetMLTransformResponse
) => any;
export declare const TransformFilterCriteriaFilterSensitiveLog: (
  obj: TransformFilterCriteria
) => any;
export declare const TransformSortCriteriaFilterSensitiveLog: (
  obj: TransformSortCriteria
) => any;
export declare const GetMLTransformsRequestFilterSensitiveLog: (
  obj: GetMLTransformsRequest
) => any;
export declare const MLTransformFilterSensitiveLog: (obj: MLTransform) => any;
export declare const GetMLTransformsResponseFilterSensitiveLog: (
  obj: GetMLTransformsResponse
) => any;
export declare const GetPartitionRequestFilterSensitiveLog: (
  obj: GetPartitionRequest
) => any;
export declare const GetPartitionResponseFilterSensitiveLog: (
  obj: GetPartitionResponse
) => any;
export declare const GetPartitionIndexesRequestFilterSensitiveLog: (
  obj: GetPartitionIndexesRequest
) => any;
export declare const BackfillErrorFilterSensitiveLog: (
  obj: BackfillError
) => any;
export declare const KeySchemaElementFilterSensitiveLog: (
  obj: KeySchemaElement
) => any;
export declare const PartitionIndexDescriptorFilterSensitiveLog: (
  obj: PartitionIndexDescriptor
) => any;
export declare const GetPartitionIndexesResponseFilterSensitiveLog: (
  obj: GetPartitionIndexesResponse
) => any;
export declare const SegmentFilterSensitiveLog: (obj: Segment) => any;
export declare const GetPartitionsRequestFilterSensitiveLog: (
  obj: GetPartitionsRequest
) => any;
export declare const GetPartitionsResponseFilterSensitiveLog: (
  obj: GetPartitionsResponse
) => any;
export declare const GetPlanRequestFilterSensitiveLog: (
  obj: GetPlanRequest
) => any;
export declare const GetPlanResponseFilterSensitiveLog: (
  obj: GetPlanResponse
) => any;
export declare const GetRegistryInputFilterSensitiveLog: (
  obj: GetRegistryInput
) => any;
export declare const GetRegistryResponseFilterSensitiveLog: (
  obj: GetRegistryResponse
) => any;
export declare const GetResourcePoliciesRequestFilterSensitiveLog: (
  obj: GetResourcePoliciesRequest
) => any;
export declare const GluePolicyFilterSensitiveLog: (obj: GluePolicy) => any;
export declare const GetResourcePoliciesResponseFilterSensitiveLog: (
  obj: GetResourcePoliciesResponse
) => any;
export declare const GetResourcePolicyRequestFilterSensitiveLog: (
  obj: GetResourcePolicyRequest
) => any;
export declare const GetResourcePolicyResponseFilterSensitiveLog: (
  obj: GetResourcePolicyResponse
) => any;
export declare const GetSchemaInputFilterSensitiveLog: (
  obj: GetSchemaInput
) => any;
export declare const GetSchemaResponseFilterSensitiveLog: (
  obj: GetSchemaResponse
) => any;
export declare const GetSchemaByDefinitionInputFilterSensitiveLog: (
  obj: GetSchemaByDefinitionInput
) => any;
export declare const GetSchemaByDefinitionResponseFilterSensitiveLog: (
  obj: GetSchemaByDefinitionResponse
) => any;
export declare const SchemaVersionNumberFilterSensitiveLog: (
  obj: SchemaVersionNumber
) => any;
export declare const GetSchemaVersionInputFilterSensitiveLog: (
  obj: GetSchemaVersionInput
) => any;
export declare const GetSchemaVersionResponseFilterSensitiveLog: (
  obj: GetSchemaVersionResponse
) => any;
export declare const GetSchemaVersionsDiffInputFilterSensitiveLog: (
  obj: GetSchemaVersionsDiffInput
) => any;
export declare const GetSchemaVersionsDiffResponseFilterSensitiveLog: (
  obj: GetSchemaVersionsDiffResponse
) => any;
export declare const GetSecurityConfigurationRequestFilterSensitiveLog: (
  obj: GetSecurityConfigurationRequest
) => any;
export declare const SecurityConfigurationFilterSensitiveLog: (
  obj: SecurityConfiguration
) => any;
export declare const GetSecurityConfigurationResponseFilterSensitiveLog: (
  obj: GetSecurityConfigurationResponse
) => any;
export declare const GetSecurityConfigurationsRequestFilterSensitiveLog: (
  obj: GetSecurityConfigurationsRequest
) => any;
export declare const GetSecurityConfigurationsResponseFilterSensitiveLog: (
  obj: GetSecurityConfigurationsResponse
) => any;
export declare const GetSessionRequestFilterSensitiveLog: (
  obj: GetSessionRequest
) => any;
export declare const GetSessionResponseFilterSensitiveLog: (
  obj: GetSessionResponse
) => any;
export declare const GetStatementRequestFilterSensitiveLog: (
  obj: GetStatementRequest
) => any;
export declare const StatementOutputDataFilterSensitiveLog: (
  obj: StatementOutputData
) => any;
export declare const StatementOutputFilterSensitiveLog: (
  obj: StatementOutput
) => any;
export declare const StatementFilterSensitiveLog: (obj: Statement) => any;
export declare const GetStatementResponseFilterSensitiveLog: (
  obj: GetStatementResponse
) => any;
export declare const GetTableRequestFilterSensitiveLog: (
  obj: GetTableRequest
) => any;
export declare const TableFilterSensitiveLog: (obj: Table) => any;
export declare const GetTableResponseFilterSensitiveLog: (
  obj: GetTableResponse
) => any;
export declare const GetTablesRequestFilterSensitiveLog: (
  obj: GetTablesRequest
) => any;
export declare const GetTablesResponseFilterSensitiveLog: (
  obj: GetTablesResponse
) => any;
export declare const GetTableVersionRequestFilterSensitiveLog: (
  obj: GetTableVersionRequest
) => any;
export declare const TableVersionFilterSensitiveLog: (obj: TableVersion) => any;
export declare const GetTableVersionResponseFilterSensitiveLog: (
  obj: GetTableVersionResponse
) => any;
export declare const GetTableVersionsRequestFilterSensitiveLog: (
  obj: GetTableVersionsRequest
) => any;
export declare const GetTableVersionsResponseFilterSensitiveLog: (
  obj: GetTableVersionsResponse
) => any;
export declare const GetTagsRequestFilterSensitiveLog: (
  obj: GetTagsRequest
) => any;
export declare const GetTagsResponseFilterSensitiveLog: (
  obj: GetTagsResponse
) => any;
export declare const GetTriggerRequestFilterSensitiveLog: (
  obj: GetTriggerRequest
) => any;
export declare const GetTriggerResponseFilterSensitiveLog: (
  obj: GetTriggerResponse
) => any;
export declare const GetTriggersRequestFilterSensitiveLog: (
  obj: GetTriggersRequest
) => any;
export declare const GetTriggersResponseFilterSensitiveLog: (
  obj: GetTriggersResponse
) => any;
export declare const GetUnfilteredPartitionMetadataRequestFilterSensitiveLog: (
  obj: GetUnfilteredPartitionMetadataRequest
) => any;
export declare const GetUnfilteredPartitionMetadataResponseFilterSensitiveLog: (
  obj: GetUnfilteredPartitionMetadataResponse
) => any;
export declare const GetUnfilteredPartitionsMetadataRequestFilterSensitiveLog: (
  obj: GetUnfilteredPartitionsMetadataRequest
) => any;
export declare const UnfilteredPartitionFilterSensitiveLog: (
  obj: UnfilteredPartition
) => any;
export declare const GetUnfilteredPartitionsMetadataResponseFilterSensitiveLog: (
  obj: GetUnfilteredPartitionsMetadataResponse
) => any;
export declare const GetUnfilteredTableMetadataRequestFilterSensitiveLog: (
  obj: GetUnfilteredTableMetadataRequest
) => any;
export declare const ColumnRowFilterFilterSensitiveLog: (
  obj: ColumnRowFilter
) => any;
export declare const GetUnfilteredTableMetadataResponseFilterSensitiveLog: (
  obj: GetUnfilteredTableMetadataResponse
) => any;
export declare const GetUserDefinedFunctionRequestFilterSensitiveLog: (
  obj: GetUserDefinedFunctionRequest
) => any;
export declare const UserDefinedFunctionFilterSensitiveLog: (
  obj: UserDefinedFunction
) => any;
export declare const GetUserDefinedFunctionResponseFilterSensitiveLog: (
  obj: GetUserDefinedFunctionResponse
) => any;
export declare const GetUserDefinedFunctionsRequestFilterSensitiveLog: (
  obj: GetUserDefinedFunctionsRequest
) => any;
export declare const GetUserDefinedFunctionsResponseFilterSensitiveLog: (
  obj: GetUserDefinedFunctionsResponse
) => any;
export declare const GetWorkflowRequestFilterSensitiveLog: (
  obj: GetWorkflowRequest
) => any;
export declare const GetWorkflowResponseFilterSensitiveLog: (
  obj: GetWorkflowResponse
) => any;
export declare const GetWorkflowRunRequestFilterSensitiveLog: (
  obj: GetWorkflowRunRequest
) => any;
export declare const GetWorkflowRunResponseFilterSensitiveLog: (
  obj: GetWorkflowRunResponse
) => any;
export declare const GetWorkflowRunPropertiesRequestFilterSensitiveLog: (
  obj: GetWorkflowRunPropertiesRequest
) => any;
export declare const GetWorkflowRunPropertiesResponseFilterSensitiveLog: (
  obj: GetWorkflowRunPropertiesResponse
) => any;
export declare const GetWorkflowRunsRequestFilterSensitiveLog: (
  obj: GetWorkflowRunsRequest
) => any;
export declare const GetWorkflowRunsResponseFilterSensitiveLog: (
  obj: GetWorkflowRunsResponse
) => any;
export declare const ImportCatalogToGlueRequestFilterSensitiveLog: (
  obj: ImportCatalogToGlueRequest
) => any;
export declare const ImportCatalogToGlueResponseFilterSensitiveLog: (
  obj: ImportCatalogToGlueResponse
) => any;
export declare const ListBlueprintsRequestFilterSensitiveLog: (
  obj: ListBlueprintsRequest
) => any;
export declare const ListBlueprintsResponseFilterSensitiveLog: (
  obj: ListBlueprintsResponse
) => any;
export declare const ListCrawlersRequestFilterSensitiveLog: (
  obj: ListCrawlersRequest
) => any;
export declare const ListCrawlersResponseFilterSensitiveLog: (
  obj: ListCrawlersResponse
) => any;
