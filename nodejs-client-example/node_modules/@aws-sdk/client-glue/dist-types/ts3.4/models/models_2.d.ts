import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { GlueServiceException as __BaseException } from "./GlueServiceException";
import {
  Action,
  Aggregate,
  AthenaConnectorSource,
  BasicCatalogTarget,
  CatalogHudiSource,
  CatalogKafkaSource,
  CatalogKinesisSource,
  CatalogSource,
  Compatibility,
  ConnectionInput,
  ConnectionsList,
  CrawlerTargets,
  CsvHeaderOption,
  CustomCode,
  CustomEntityType,
  DatabaseInput,
  DataQualityTargetTable,
  DataSource,
  DirectJDBCSource,
  DirectKafkaSource,
  DirectKinesisSource,
  DropDuplicates,
  DropFields,
  DropNullFields,
  DynamicTransform,
  DynamoDBCatalogSource,
  ErrorDetail,
  EvaluateDataQuality,
  EventBatchingCondition,
  ExecutionClass,
  ExecutionProperty,
  FillMissingValues,
  Filter,
  GovernedCatalogSource,
  GovernedCatalogTarget,
  JDBCConnectorSource,
  JDBCConnectorTarget,
  JobCommand,
  Join,
  LakeFormationConfiguration,
  LineageConfiguration,
  Merge,
  MicrosoftSQLServerCatalogSource,
  MicrosoftSQLServerCatalogTarget,
  MySQLCatalogSource,
  MySQLCatalogTarget,
  NotificationProperty,
  OracleSQLCatalogSource,
  OracleSQLCatalogTarget,
  PartitionInput,
  PIIDetection,
  PostgreSQLCatalogSource,
  PostgreSQLCatalogTarget,
  Predicate,
  RecrawlPolicy,
  RedshiftSource,
  RedshiftTarget,
  RegistryId,
  RelationalCatalogSource,
  RenameField,
  S3CatalogHudiSource,
  S3CatalogSource,
  S3CatalogTarget,
  S3CsvSource,
  S3DirectTarget,
  S3GlueParquetTarget,
  S3HudiCatalogTarget,
  S3HudiDirectTarget,
  S3HudiSource,
  S3JsonSource,
  S3ParquetSource,
  SchemaChangePolicy,
  SchemaId,
  SchemaStatus,
  SchemaVersionStatus,
  SelectFields,
  SelectFromCollection,
  SourceControlAuthStrategy,
  SourceControlDetails,
  SourceControlProvider,
  SparkConnectorSource,
  SparkConnectorTarget,
  SparkSQL,
  Spigot,
  SplitFields,
  TaskStatusType,
  TransformParameters,
  Trigger,
  Union,
  WorkerType,
} from "./models_0";
import {
  ColumnStatistics,
  DataCatalogEncryptionSettings,
  DataQualityEvaluationRunAdditionalRunOptions,
  FieldName,
  FilterOperator,
  JobBookmarkEntry,
  RegistryStatus,
  ResourceShareType,
  SchemaVersionNumber,
  Session,
  Statement,
  Table,
  TableInput,
  TransformFilterCriteria,
  TransformSortCriteria,
  UserDefinedFunctionInput,
} from "./models_1";
export interface CrawlsFilter {
  FieldName?: FieldName | string;
  FilterOperator?: FilterOperator | string;
  FieldValue?: string;
}
export interface ListCrawlsRequest {
  CrawlerName: string | undefined;
  MaxResults?: number;
  Filters?: CrawlsFilter[];
  NextToken?: string;
}
export declare enum CrawlerHistoryState {
  COMPLETED = "COMPLETED",
  FAILED = "FAILED",
  RUNNING = "RUNNING",
  STOPPED = "STOPPED",
}
export interface CrawlerHistory {
  CrawlId?: string;
  State?: CrawlerHistoryState | string;
  StartTime?: Date;
  EndTime?: Date;
  Summary?: string;
  ErrorMessage?: string;
  LogGroup?: string;
  LogStream?: string;
  MessagePrefix?: string;
  DPUHour?: number;
}
export interface ListCrawlsResponse {
  Crawls?: CrawlerHistory[];
  NextToken?: string;
}
export interface ListCustomEntityTypesRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListCustomEntityTypesResponse {
  CustomEntityTypes?: CustomEntityType[];
  NextToken?: string;
}
export interface DataQualityResultFilterCriteria {
  DataSource?: DataSource;
  JobName?: string;
  JobRunId?: string;
  StartedAfter?: Date;
  StartedBefore?: Date;
}
export interface ListDataQualityResultsRequest {
  Filter?: DataQualityResultFilterCriteria;
  NextToken?: string;
  MaxResults?: number;
}
export interface DataQualityResultDescription {
  ResultId?: string;
  DataSource?: DataSource;
  JobName?: string;
  JobRunId?: string;
  StartedOn?: Date;
}
export interface ListDataQualityResultsResponse {
  Results: DataQualityResultDescription[] | undefined;
  NextToken?: string;
}
export interface DataQualityRuleRecommendationRunFilter {
  DataSource: DataSource | undefined;
  StartedBefore?: Date;
  StartedAfter?: Date;
}
export interface ListDataQualityRuleRecommendationRunsRequest {
  Filter?: DataQualityRuleRecommendationRunFilter;
  NextToken?: string;
  MaxResults?: number;
}
export interface DataQualityRuleRecommendationRunDescription {
  RunId?: string;
  Status?: TaskStatusType | string;
  StartedOn?: Date;
  DataSource?: DataSource;
}
export interface ListDataQualityRuleRecommendationRunsResponse {
  Runs?: DataQualityRuleRecommendationRunDescription[];
  NextToken?: string;
}
export interface DataQualityRulesetEvaluationRunFilter {
  DataSource: DataSource | undefined;
  StartedBefore?: Date;
  StartedAfter?: Date;
}
export interface ListDataQualityRulesetEvaluationRunsRequest {
  Filter?: DataQualityRulesetEvaluationRunFilter;
  NextToken?: string;
  MaxResults?: number;
}
export interface DataQualityRulesetEvaluationRunDescription {
  RunId?: string;
  Status?: TaskStatusType | string;
  StartedOn?: Date;
  DataSource?: DataSource;
}
export interface ListDataQualityRulesetEvaluationRunsResponse {
  Runs?: DataQualityRulesetEvaluationRunDescription[];
  NextToken?: string;
}
export interface DataQualityRulesetFilterCriteria {
  Name?: string;
  Description?: string;
  CreatedBefore?: Date;
  CreatedAfter?: Date;
  LastModifiedBefore?: Date;
  LastModifiedAfter?: Date;
  TargetTable?: DataQualityTargetTable;
}
export interface ListDataQualityRulesetsRequest {
  NextToken?: string;
  MaxResults?: number;
  Filter?: DataQualityRulesetFilterCriteria;
  Tags?: Record<string, string>;
}
export interface DataQualityRulesetListDetails {
  Name?: string;
  Description?: string;
  CreatedOn?: Date;
  LastModifiedOn?: Date;
  TargetTable?: DataQualityTargetTable;
  RecommendationRunId?: string;
  RuleCount?: number;
}
export interface ListDataQualityRulesetsResponse {
  Rulesets?: DataQualityRulesetListDetails[];
  NextToken?: string;
}
export interface ListDevEndpointsRequest {
  NextToken?: string;
  MaxResults?: number;
  Tags?: Record<string, string>;
}
export interface ListDevEndpointsResponse {
  DevEndpointNames?: string[];
  NextToken?: string;
}
export interface ListJobsRequest {
  NextToken?: string;
  MaxResults?: number;
  Tags?: Record<string, string>;
}
export interface ListJobsResponse {
  JobNames?: string[];
  NextToken?: string;
}
export interface ListMLTransformsRequest {
  NextToken?: string;
  MaxResults?: number;
  Filter?: TransformFilterCriteria;
  Sort?: TransformSortCriteria;
  Tags?: Record<string, string>;
}
export interface ListMLTransformsResponse {
  TransformIds: string[] | undefined;
  NextToken?: string;
}
export interface ListRegistriesInput {
  MaxResults?: number;
  NextToken?: string;
}
export interface RegistryListItem {
  RegistryName?: string;
  RegistryArn?: string;
  Description?: string;
  Status?: RegistryStatus | string;
  CreatedTime?: string;
  UpdatedTime?: string;
}
export interface ListRegistriesResponse {
  Registries?: RegistryListItem[];
  NextToken?: string;
}
export interface ListSchemasInput {
  RegistryId?: RegistryId;
  MaxResults?: number;
  NextToken?: string;
}
export interface SchemaListItem {
  RegistryName?: string;
  SchemaName?: string;
  SchemaArn?: string;
  Description?: string;
  SchemaStatus?: SchemaStatus | string;
  CreatedTime?: string;
  UpdatedTime?: string;
}
export interface ListSchemasResponse {
  Schemas?: SchemaListItem[];
  NextToken?: string;
}
export interface ListSchemaVersionsInput {
  SchemaId: SchemaId | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface SchemaVersionListItem {
  SchemaArn?: string;
  SchemaVersionId?: string;
  VersionNumber?: number;
  Status?: SchemaVersionStatus | string;
  CreatedTime?: string;
}
export interface ListSchemaVersionsResponse {
  Schemas?: SchemaVersionListItem[];
  NextToken?: string;
}
export interface ListSessionsRequest {
  NextToken?: string;
  MaxResults?: number;
  Tags?: Record<string, string>;
  RequestOrigin?: string;
}
export interface ListSessionsResponse {
  Ids?: string[];
  Sessions?: Session[];
  NextToken?: string;
}
export interface ListStatementsRequest {
  SessionId: string | undefined;
  RequestOrigin?: string;
  NextToken?: string;
}
export interface ListStatementsResponse {
  Statements?: Statement[];
  NextToken?: string;
}
export interface ListTriggersRequest {
  NextToken?: string;
  DependentJobName?: string;
  MaxResults?: number;
  Tags?: Record<string, string>;
}
export interface ListTriggersResponse {
  TriggerNames?: string[];
  NextToken?: string;
}
export interface ListWorkflowsRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListWorkflowsResponse {
  Workflows?: string[];
  NextToken?: string;
}
export interface PutDataCatalogEncryptionSettingsRequest {
  CatalogId?: string;
  DataCatalogEncryptionSettings: DataCatalogEncryptionSettings | undefined;
}
export interface PutDataCatalogEncryptionSettingsResponse {}
export declare enum EnableHybridValues {
  FALSE = "FALSE",
  TRUE = "TRUE",
}
export declare enum ExistCondition {
  MUST_EXIST = "MUST_EXIST",
  NONE = "NONE",
  NOT_EXIST = "NOT_EXIST",
}
export interface PutResourcePolicyRequest {
  PolicyInJson: string | undefined;
  ResourceArn?: string;
  PolicyHashCondition?: string;
  PolicyExistsCondition?: ExistCondition | string;
  EnableHybrid?: EnableHybridValues | string;
}
export interface PutResourcePolicyResponse {
  PolicyHash?: string;
}
export interface MetadataKeyValuePair {
  MetadataKey?: string;
  MetadataValue?: string;
}
export interface PutSchemaVersionMetadataInput {
  SchemaId?: SchemaId;
  SchemaVersionNumber?: SchemaVersionNumber;
  SchemaVersionId?: string;
  MetadataKeyValue: MetadataKeyValuePair | undefined;
}
export interface PutSchemaVersionMetadataResponse {
  SchemaArn?: string;
  SchemaName?: string;
  RegistryName?: string;
  LatestVersion?: boolean;
  VersionNumber?: number;
  SchemaVersionId?: string;
  MetadataKey?: string;
  MetadataValue?: string;
}
export interface PutWorkflowRunPropertiesRequest {
  Name: string | undefined;
  RunId: string | undefined;
  RunProperties: Record<string, string> | undefined;
}
export interface PutWorkflowRunPropertiesResponse {}
export interface QuerySchemaVersionMetadataInput {
  SchemaId?: SchemaId;
  SchemaVersionNumber?: SchemaVersionNumber;
  SchemaVersionId?: string;
  MetadataList?: MetadataKeyValuePair[];
  MaxResults?: number;
  NextToken?: string;
}
export interface OtherMetadataValueListItem {
  MetadataValue?: string;
  CreatedTime?: string;
}
export interface MetadataInfo {
  MetadataValue?: string;
  CreatedTime?: string;
  OtherMetadataValueList?: OtherMetadataValueListItem[];
}
export interface QuerySchemaVersionMetadataResponse {
  MetadataInfoMap?: Record<string, MetadataInfo>;
  SchemaVersionId?: string;
  NextToken?: string;
}
export interface RegisterSchemaVersionInput {
  SchemaId: SchemaId | undefined;
  SchemaDefinition: string | undefined;
}
export interface RegisterSchemaVersionResponse {
  SchemaVersionId?: string;
  VersionNumber?: number;
  Status?: SchemaVersionStatus | string;
}
export interface RemoveSchemaVersionMetadataInput {
  SchemaId?: SchemaId;
  SchemaVersionNumber?: SchemaVersionNumber;
  SchemaVersionId?: string;
  MetadataKeyValue: MetadataKeyValuePair | undefined;
}
export interface RemoveSchemaVersionMetadataResponse {
  SchemaArn?: string;
  SchemaName?: string;
  RegistryName?: string;
  LatestVersion?: boolean;
  VersionNumber?: number;
  SchemaVersionId?: string;
  MetadataKey?: string;
  MetadataValue?: string;
}
export interface ResetJobBookmarkRequest {
  JobName: string | undefined;
  RunId?: string;
}
export interface ResetJobBookmarkResponse {
  JobBookmarkEntry?: JobBookmarkEntry;
}
export declare class ConcurrentRunsExceededException extends __BaseException {
  readonly name: "ConcurrentRunsExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      ConcurrentRunsExceededException,
      __BaseException
    >
  );
}
export declare class IllegalWorkflowStateException extends __BaseException {
  readonly name: "IllegalWorkflowStateException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<IllegalWorkflowStateException, __BaseException>
  );
}
export interface ResumeWorkflowRunRequest {
  Name: string | undefined;
  RunId: string | undefined;
  NodeIds: string[] | undefined;
}
export interface ResumeWorkflowRunResponse {
  RunId?: string;
  NodeIds?: string[];
}
export interface RunStatementRequest {
  SessionId: string | undefined;
  Code: string | undefined;
  RequestOrigin?: string;
}
export interface RunStatementResponse {
  Id?: number;
}
export declare enum Comparator {
  EQUALS = "EQUALS",
  GREATER_THAN = "GREATER_THAN",
  GREATER_THAN_EQUALS = "GREATER_THAN_EQUALS",
  LESS_THAN = "LESS_THAN",
  LESS_THAN_EQUALS = "LESS_THAN_EQUALS",
}
export interface PropertyPredicate {
  Key?: string;
  Value?: string;
  Comparator?: Comparator | string;
}
export declare enum Sort {
  ASCENDING = "ASC",
  DESCENDING = "DESC",
}
export interface SortCriterion {
  FieldName?: string;
  Sort?: Sort | string;
}
export interface SearchTablesRequest {
  CatalogId?: string;
  NextToken?: string;
  Filters?: PropertyPredicate[];
  SearchText?: string;
  SortCriteria?: SortCriterion[];
  MaxResults?: number;
  ResourceShareType?: ResourceShareType | string;
}
export interface SearchTablesResponse {
  NextToken?: string;
  TableList?: Table[];
}
export declare class IllegalBlueprintStateException extends __BaseException {
  readonly name: "IllegalBlueprintStateException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<IllegalBlueprintStateException, __BaseException>
  );
}
export interface StartBlueprintRunRequest {
  BlueprintName: string | undefined;
  Parameters?: string;
  RoleArn: string | undefined;
}
export interface StartBlueprintRunResponse {
  RunId?: string;
}
export interface StartCrawlerRequest {
  Name: string | undefined;
}
export interface StartCrawlerResponse {}
export declare class NoScheduleException extends __BaseException {
  readonly name: "NoScheduleException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<NoScheduleException, __BaseException>
  );
}
export declare class SchedulerRunningException extends __BaseException {
  readonly name: "SchedulerRunningException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<SchedulerRunningException, __BaseException>
  );
}
export interface StartCrawlerScheduleRequest {
  CrawlerName: string | undefined;
}
export interface StartCrawlerScheduleResponse {}
export interface StartDataQualityRuleRecommendationRunRequest {
  DataSource: DataSource | undefined;
  Role: string | undefined;
  NumberOfWorkers?: number;
  Timeout?: number;
  CreatedRulesetName?: string;
  ClientToken?: string;
}
export interface StartDataQualityRuleRecommendationRunResponse {
  RunId?: string;
}
export interface StartDataQualityRulesetEvaluationRunRequest {
  DataSource: DataSource | undefined;
  Role: string | undefined;
  NumberOfWorkers?: number;
  Timeout?: number;
  ClientToken?: string;
  AdditionalRunOptions?: DataQualityEvaluationRunAdditionalRunOptions;
  RulesetNames: string[] | undefined;
}
export interface StartDataQualityRulesetEvaluationRunResponse {
  RunId?: string;
}
export interface StartExportLabelsTaskRunRequest {
  TransformId: string | undefined;
  OutputS3Path: string | undefined;
}
export interface StartExportLabelsTaskRunResponse {
  TaskRunId?: string;
}
export interface StartImportLabelsTaskRunRequest {
  TransformId: string | undefined;
  InputS3Path: string | undefined;
  ReplaceAllLabels?: boolean;
}
export interface StartImportLabelsTaskRunResponse {
  TaskRunId?: string;
}
export interface StartJobRunRequest {
  JobName: string | undefined;
  JobRunId?: string;
  Arguments?: Record<string, string>;
  AllocatedCapacity?: number;
  Timeout?: number;
  MaxCapacity?: number;
  SecurityConfiguration?: string;
  NotificationProperty?: NotificationProperty;
  WorkerType?: WorkerType | string;
  NumberOfWorkers?: number;
  ExecutionClass?: ExecutionClass | string;
}
export interface StartJobRunResponse {
  JobRunId?: string;
}
export declare class MLTransformNotReadyException extends __BaseException {
  readonly name: "MLTransformNotReadyException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<MLTransformNotReadyException, __BaseException>
  );
}
export interface StartMLEvaluationTaskRunRequest {
  TransformId: string | undefined;
}
export interface StartMLEvaluationTaskRunResponse {
  TaskRunId?: string;
}
export interface StartMLLabelingSetGenerationTaskRunRequest {
  TransformId: string | undefined;
  OutputS3Path: string | undefined;
}
export interface StartMLLabelingSetGenerationTaskRunResponse {
  TaskRunId?: string;
}
export interface StartTriggerRequest {
  Name: string | undefined;
}
export interface StartTriggerResponse {
  Name?: string;
}
export interface StartWorkflowRunRequest {
  Name: string | undefined;
  RunProperties?: Record<string, string>;
}
export interface StartWorkflowRunResponse {
  RunId?: string;
}
export declare class CrawlerNotRunningException extends __BaseException {
  readonly name: "CrawlerNotRunningException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<CrawlerNotRunningException, __BaseException>
  );
}
export declare class CrawlerStoppingException extends __BaseException {
  readonly name: "CrawlerStoppingException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<CrawlerStoppingException, __BaseException>
  );
}
export interface StopCrawlerRequest {
  Name: string | undefined;
}
export interface StopCrawlerResponse {}
export declare class SchedulerNotRunningException extends __BaseException {
  readonly name: "SchedulerNotRunningException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<SchedulerNotRunningException, __BaseException>
  );
}
export interface StopCrawlerScheduleRequest {
  CrawlerName: string | undefined;
}
export interface StopCrawlerScheduleResponse {}
export interface StopSessionRequest {
  Id: string | undefined;
  RequestOrigin?: string;
}
export interface StopSessionResponse {
  Id?: string;
}
export interface StopTriggerRequest {
  Name: string | undefined;
}
export interface StopTriggerResponse {
  Name?: string;
}
export interface StopWorkflowRunRequest {
  Name: string | undefined;
  RunId: string | undefined;
}
export interface StopWorkflowRunResponse {}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  TagsToAdd: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagsToRemove: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateBlueprintRequest {
  Name: string | undefined;
  Description?: string;
  BlueprintLocation: string | undefined;
}
export interface UpdateBlueprintResponse {
  Name?: string;
}
export interface UpdateCsvClassifierRequest {
  Name: string | undefined;
  Delimiter?: string;
  QuoteSymbol?: string;
  ContainsHeader?: CsvHeaderOption | string;
  Header?: string[];
  DisableValueTrimming?: boolean;
  AllowSingleColumn?: boolean;
  CustomDatatypeConfigured?: boolean;
  CustomDatatypes?: string[];
}
export interface UpdateGrokClassifierRequest {
  Name: string | undefined;
  Classification?: string;
  GrokPattern?: string;
  CustomPatterns?: string;
}
export interface UpdateJsonClassifierRequest {
  Name: string | undefined;
  JsonPath?: string;
}
export interface UpdateXMLClassifierRequest {
  Name: string | undefined;
  Classification?: string;
  RowTag?: string;
}
export interface UpdateClassifierRequest {
  GrokClassifier?: UpdateGrokClassifierRequest;
  XMLClassifier?: UpdateXMLClassifierRequest;
  JsonClassifier?: UpdateJsonClassifierRequest;
  CsvClassifier?: UpdateCsvClassifierRequest;
}
export interface UpdateClassifierResponse {}
export declare class VersionMismatchException extends __BaseException {
  readonly name: "VersionMismatchException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<VersionMismatchException, __BaseException>
  );
}
export interface UpdateColumnStatisticsForPartitionRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  PartitionValues: string[] | undefined;
  ColumnStatisticsList: ColumnStatistics[] | undefined;
}
export interface ColumnStatisticsError {
  ColumnStatistics?: ColumnStatistics;
  Error?: ErrorDetail;
}
export interface UpdateColumnStatisticsForPartitionResponse {
  Errors?: ColumnStatisticsError[];
}
export interface UpdateColumnStatisticsForTableRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  ColumnStatisticsList: ColumnStatistics[] | undefined;
}
export interface UpdateColumnStatisticsForTableResponse {
  Errors?: ColumnStatisticsError[];
}
export interface UpdateConnectionRequest {
  CatalogId?: string;
  Name: string | undefined;
  ConnectionInput: ConnectionInput | undefined;
}
export interface UpdateConnectionResponse {}
export interface UpdateCrawlerRequest {
  Name: string | undefined;
  Role?: string;
  DatabaseName?: string;
  Description?: string;
  Targets?: CrawlerTargets;
  Schedule?: string;
  Classifiers?: string[];
  TablePrefix?: string;
  SchemaChangePolicy?: SchemaChangePolicy;
  RecrawlPolicy?: RecrawlPolicy;
  LineageConfiguration?: LineageConfiguration;
  LakeFormationConfiguration?: LakeFormationConfiguration;
  Configuration?: string;
  CrawlerSecurityConfiguration?: string;
}
export interface UpdateCrawlerResponse {}
export interface UpdateCrawlerScheduleRequest {
  CrawlerName: string | undefined;
  Schedule?: string;
}
export interface UpdateCrawlerScheduleResponse {}
export interface UpdateDatabaseRequest {
  CatalogId?: string;
  Name: string | undefined;
  DatabaseInput: DatabaseInput | undefined;
}
export interface UpdateDatabaseResponse {}
export interface UpdateDataQualityRulesetRequest {
  Name: string | undefined;
  UpdatedName?: string;
  Description?: string;
  Ruleset?: string;
}
export interface UpdateDataQualityRulesetResponse {
  Name?: string;
  Description?: string;
  Ruleset?: string;
}
export interface DevEndpointCustomLibraries {
  ExtraPythonLibsS3Path?: string;
  ExtraJarsS3Path?: string;
}
export interface UpdateDevEndpointRequest {
  EndpointName: string | undefined;
  PublicKey?: string;
  AddPublicKeys?: string[];
  DeletePublicKeys?: string[];
  CustomLibraries?: DevEndpointCustomLibraries;
  UpdateEtlLibraries?: boolean;
  DeleteArguments?: string[];
  AddArguments?: Record<string, string>;
}
export interface UpdateDevEndpointResponse {}
export interface UpdateJobResponse {
  JobName?: string;
}
export interface UpdateJobFromSourceControlRequest {
  JobName?: string;
  Provider?: SourceControlProvider | string;
  RepositoryName?: string;
  RepositoryOwner?: string;
  BranchName?: string;
  Folder?: string;
  CommitId?: string;
  AuthStrategy?: SourceControlAuthStrategy | string;
  AuthToken?: string;
}
export interface UpdateJobFromSourceControlResponse {
  JobName?: string;
}
export interface UpdateMLTransformRequest {
  TransformId: string | undefined;
  Name?: string;
  Description?: string;
  Parameters?: TransformParameters;
  Role?: string;
  GlueVersion?: string;
  MaxCapacity?: number;
  WorkerType?: WorkerType | string;
  NumberOfWorkers?: number;
  Timeout?: number;
  MaxRetries?: number;
}
export interface UpdateMLTransformResponse {
  TransformId?: string;
}
export interface UpdatePartitionRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  PartitionValueList: string[] | undefined;
  PartitionInput: PartitionInput | undefined;
}
export interface UpdatePartitionResponse {}
export interface UpdateRegistryInput {
  RegistryId: RegistryId | undefined;
  Description: string | undefined;
}
export interface UpdateRegistryResponse {
  RegistryName?: string;
  RegistryArn?: string;
}
export interface UpdateSchemaInput {
  SchemaId: SchemaId | undefined;
  SchemaVersionNumber?: SchemaVersionNumber;
  Compatibility?: Compatibility | string;
  Description?: string;
}
export interface UpdateSchemaResponse {
  SchemaArn?: string;
  SchemaName?: string;
  RegistryName?: string;
}
export interface UpdateSourceControlFromJobRequest {
  JobName?: string;
  Provider?: SourceControlProvider | string;
  RepositoryName?: string;
  RepositoryOwner?: string;
  BranchName?: string;
  Folder?: string;
  CommitId?: string;
  AuthStrategy?: SourceControlAuthStrategy | string;
  AuthToken?: string;
}
export interface UpdateSourceControlFromJobResponse {
  JobName?: string;
}
export interface UpdateTableRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  TableInput: TableInput | undefined;
  SkipArchive?: boolean;
  TransactionId?: string;
  VersionId?: string;
}
export interface UpdateTableResponse {}
export interface TriggerUpdate {
  Name?: string;
  Description?: string;
  Schedule?: string;
  Actions?: Action[];
  Predicate?: Predicate;
  EventBatchingCondition?: EventBatchingCondition;
}
export interface UpdateTriggerRequest {
  Name: string | undefined;
  TriggerUpdate: TriggerUpdate | undefined;
}
export interface UpdateTriggerResponse {
  Trigger?: Trigger;
}
export interface UpdateUserDefinedFunctionRequest {
  CatalogId?: string;
  DatabaseName: string | undefined;
  FunctionName: string | undefined;
  FunctionInput: UserDefinedFunctionInput | undefined;
}
export interface UpdateUserDefinedFunctionResponse {}
export interface UpdateWorkflowRequest {
  Name: string | undefined;
  Description?: string;
  DefaultRunProperties?: Record<string, string>;
  MaxConcurrentRuns?: number;
}
export interface UpdateWorkflowResponse {
  Name?: string;
}
export interface Mapping {
  ToKey?: string;
  FromPath?: string[];
  FromType?: string;
  ToType?: string;
  Dropped?: boolean;
  Children?: Mapping[];
}
export interface ApplyMapping {
  Name: string | undefined;
  Inputs: string[] | undefined;
  Mapping: Mapping[] | undefined;
}
export interface CodeGenConfigurationNode {
  AthenaConnectorSource?: AthenaConnectorSource;
  JDBCConnectorSource?: JDBCConnectorSource;
  SparkConnectorSource?: SparkConnectorSource;
  CatalogSource?: CatalogSource;
  RedshiftSource?: RedshiftSource;
  S3CatalogSource?: S3CatalogSource;
  S3CsvSource?: S3CsvSource;
  S3JsonSource?: S3JsonSource;
  S3ParquetSource?: S3ParquetSource;
  RelationalCatalogSource?: RelationalCatalogSource;
  DynamoDBCatalogSource?: DynamoDBCatalogSource;
  JDBCConnectorTarget?: JDBCConnectorTarget;
  SparkConnectorTarget?: SparkConnectorTarget;
  CatalogTarget?: BasicCatalogTarget;
  RedshiftTarget?: RedshiftTarget;
  S3CatalogTarget?: S3CatalogTarget;
  S3GlueParquetTarget?: S3GlueParquetTarget;
  S3DirectTarget?: S3DirectTarget;
  ApplyMapping?: ApplyMapping;
  SelectFields?: SelectFields;
  DropFields?: DropFields;
  RenameField?: RenameField;
  Spigot?: Spigot;
  Join?: Join;
  SplitFields?: SplitFields;
  SelectFromCollection?: SelectFromCollection;
  FillMissingValues?: FillMissingValues;
  Filter?: Filter;
  CustomCode?: CustomCode;
  SparkSQL?: SparkSQL;
  DirectKinesisSource?: DirectKinesisSource;
  DirectKafkaSource?: DirectKafkaSource;
  CatalogKinesisSource?: CatalogKinesisSource;
  CatalogKafkaSource?: CatalogKafkaSource;
  DropNullFields?: DropNullFields;
  Merge?: Merge;
  Union?: Union;
  PIIDetection?: PIIDetection;
  Aggregate?: Aggregate;
  DropDuplicates?: DropDuplicates;
  GovernedCatalogTarget?: GovernedCatalogTarget;
  GovernedCatalogSource?: GovernedCatalogSource;
  MicrosoftSQLServerCatalogSource?: MicrosoftSQLServerCatalogSource;
  MySQLCatalogSource?: MySQLCatalogSource;
  OracleSQLCatalogSource?: OracleSQLCatalogSource;
  PostgreSQLCatalogSource?: PostgreSQLCatalogSource;
  MicrosoftSQLServerCatalogTarget?: MicrosoftSQLServerCatalogTarget;
  MySQLCatalogTarget?: MySQLCatalogTarget;
  OracleSQLCatalogTarget?: OracleSQLCatalogTarget;
  PostgreSQLCatalogTarget?: PostgreSQLCatalogTarget;
  DynamicTransform?: DynamicTransform;
  EvaluateDataQuality?: EvaluateDataQuality;
  S3CatalogHudiSource?: S3CatalogHudiSource;
  CatalogHudiSource?: CatalogHudiSource;
  S3HudiSource?: S3HudiSource;
  S3HudiCatalogTarget?: S3HudiCatalogTarget;
  S3HudiDirectTarget?: S3HudiDirectTarget;
  DirectJDBCSource?: DirectJDBCSource;
}
export interface CreateJobRequest {
  Name: string | undefined;
  Description?: string;
  LogUri?: string;
  Role: string | undefined;
  ExecutionProperty?: ExecutionProperty;
  Command: JobCommand | undefined;
  DefaultArguments?: Record<string, string>;
  NonOverridableArguments?: Record<string, string>;
  Connections?: ConnectionsList;
  MaxRetries?: number;
  AllocatedCapacity?: number;
  Timeout?: number;
  MaxCapacity?: number;
  SecurityConfiguration?: string;
  Tags?: Record<string, string>;
  NotificationProperty?: NotificationProperty;
  GlueVersion?: string;
  NumberOfWorkers?: number;
  WorkerType?: WorkerType | string;
  CodeGenConfigurationNodes?: Record<string, CodeGenConfigurationNode>;
  ExecutionClass?: ExecutionClass | string;
  SourceControlDetails?: SourceControlDetails;
}
export interface Job {
  Name?: string;
  Description?: string;
  LogUri?: string;
  Role?: string;
  CreatedOn?: Date;
  LastModifiedOn?: Date;
  ExecutionProperty?: ExecutionProperty;
  Command?: JobCommand;
  DefaultArguments?: Record<string, string>;
  NonOverridableArguments?: Record<string, string>;
  Connections?: ConnectionsList;
  MaxRetries?: number;
  AllocatedCapacity?: number;
  Timeout?: number;
  MaxCapacity?: number;
  WorkerType?: WorkerType | string;
  NumberOfWorkers?: number;
  SecurityConfiguration?: string;
  NotificationProperty?: NotificationProperty;
  GlueVersion?: string;
  CodeGenConfigurationNodes?: Record<string, CodeGenConfigurationNode>;
  ExecutionClass?: ExecutionClass | string;
  SourceControlDetails?: SourceControlDetails;
}
export interface JobUpdate {
  Description?: string;
  LogUri?: string;
  Role?: string;
  ExecutionProperty?: ExecutionProperty;
  Command?: JobCommand;
  DefaultArguments?: Record<string, string>;
  NonOverridableArguments?: Record<string, string>;
  Connections?: ConnectionsList;
  MaxRetries?: number;
  AllocatedCapacity?: number;
  Timeout?: number;
  MaxCapacity?: number;
  WorkerType?: WorkerType | string;
  NumberOfWorkers?: number;
  SecurityConfiguration?: string;
  NotificationProperty?: NotificationProperty;
  GlueVersion?: string;
  CodeGenConfigurationNodes?: Record<string, CodeGenConfigurationNode>;
  ExecutionClass?: ExecutionClass | string;
  SourceControlDetails?: SourceControlDetails;
}
export interface GetJobResponse {
  Job?: Job;
}
export interface UpdateJobRequest {
  JobName: string | undefined;
  JobUpdate: JobUpdate | undefined;
}
export interface BatchGetJobsResponse {
  Jobs?: Job[];
  JobsNotFound?: string[];
}
export interface GetJobsResponse {
  Jobs?: Job[];
  NextToken?: string;
}
export declare const CrawlsFilterFilterSensitiveLog: (obj: CrawlsFilter) => any;
export declare const ListCrawlsRequestFilterSensitiveLog: (
  obj: ListCrawlsRequest
) => any;
export declare const CrawlerHistoryFilterSensitiveLog: (
  obj: CrawlerHistory
) => any;
export declare const ListCrawlsResponseFilterSensitiveLog: (
  obj: ListCrawlsResponse
) => any;
export declare const ListCustomEntityTypesRequestFilterSensitiveLog: (
  obj: ListCustomEntityTypesRequest
) => any;
export declare const ListCustomEntityTypesResponseFilterSensitiveLog: (
  obj: ListCustomEntityTypesResponse
) => any;
export declare const DataQualityResultFilterCriteriaFilterSensitiveLog: (
  obj: DataQualityResultFilterCriteria
) => any;
export declare const ListDataQualityResultsRequestFilterSensitiveLog: (
  obj: ListDataQualityResultsRequest
) => any;
export declare const DataQualityResultDescriptionFilterSensitiveLog: (
  obj: DataQualityResultDescription
) => any;
export declare const ListDataQualityResultsResponseFilterSensitiveLog: (
  obj: ListDataQualityResultsResponse
) => any;
export declare const DataQualityRuleRecommendationRunFilterFilterSensitiveLog: (
  obj: DataQualityRuleRecommendationRunFilter
) => any;
export declare const ListDataQualityRuleRecommendationRunsRequestFilterSensitiveLog: (
  obj: ListDataQualityRuleRecommendationRunsRequest
) => any;
export declare const DataQualityRuleRecommendationRunDescriptionFilterSensitiveLog: (
  obj: DataQualityRuleRecommendationRunDescription
) => any;
export declare const ListDataQualityRuleRecommendationRunsResponseFilterSensitiveLog: (
  obj: ListDataQualityRuleRecommendationRunsResponse
) => any;
export declare const DataQualityRulesetEvaluationRunFilterFilterSensitiveLog: (
  obj: DataQualityRulesetEvaluationRunFilter
) => any;
export declare const ListDataQualityRulesetEvaluationRunsRequestFilterSensitiveLog: (
  obj: ListDataQualityRulesetEvaluationRunsRequest
) => any;
export declare const DataQualityRulesetEvaluationRunDescriptionFilterSensitiveLog: (
  obj: DataQualityRulesetEvaluationRunDescription
) => any;
export declare const ListDataQualityRulesetEvaluationRunsResponseFilterSensitiveLog: (
  obj: ListDataQualityRulesetEvaluationRunsResponse
) => any;
export declare const DataQualityRulesetFilterCriteriaFilterSensitiveLog: (
  obj: DataQualityRulesetFilterCriteria
) => any;
export declare const ListDataQualityRulesetsRequestFilterSensitiveLog: (
  obj: ListDataQualityRulesetsRequest
) => any;
export declare const DataQualityRulesetListDetailsFilterSensitiveLog: (
  obj: DataQualityRulesetListDetails
) => any;
export declare const ListDataQualityRulesetsResponseFilterSensitiveLog: (
  obj: ListDataQualityRulesetsResponse
) => any;
export declare const ListDevEndpointsRequestFilterSensitiveLog: (
  obj: ListDevEndpointsRequest
) => any;
export declare const ListDevEndpointsResponseFilterSensitiveLog: (
  obj: ListDevEndpointsResponse
) => any;
export declare const ListJobsRequestFilterSensitiveLog: (
  obj: ListJobsRequest
) => any;
export declare const ListJobsResponseFilterSensitiveLog: (
  obj: ListJobsResponse
) => any;
export declare const ListMLTransformsRequestFilterSensitiveLog: (
  obj: ListMLTransformsRequest
) => any;
export declare const ListMLTransformsResponseFilterSensitiveLog: (
  obj: ListMLTransformsResponse
) => any;
export declare const ListRegistriesInputFilterSensitiveLog: (
  obj: ListRegistriesInput
) => any;
export declare const RegistryListItemFilterSensitiveLog: (
  obj: RegistryListItem
) => any;
export declare const ListRegistriesResponseFilterSensitiveLog: (
  obj: ListRegistriesResponse
) => any;
export declare const ListSchemasInputFilterSensitiveLog: (
  obj: ListSchemasInput
) => any;
export declare const SchemaListItemFilterSensitiveLog: (
  obj: SchemaListItem
) => any;
export declare const ListSchemasResponseFilterSensitiveLog: (
  obj: ListSchemasResponse
) => any;
export declare const ListSchemaVersionsInputFilterSensitiveLog: (
  obj: ListSchemaVersionsInput
) => any;
export declare const SchemaVersionListItemFilterSensitiveLog: (
  obj: SchemaVersionListItem
) => any;
export declare const ListSchemaVersionsResponseFilterSensitiveLog: (
  obj: ListSchemaVersionsResponse
) => any;
export declare const ListSessionsRequestFilterSensitiveLog: (
  obj: ListSessionsRequest
) => any;
export declare const ListSessionsResponseFilterSensitiveLog: (
  obj: ListSessionsResponse
) => any;
export declare const ListStatementsRequestFilterSensitiveLog: (
  obj: ListStatementsRequest
) => any;
export declare const ListStatementsResponseFilterSensitiveLog: (
  obj: ListStatementsResponse
) => any;
export declare const ListTriggersRequestFilterSensitiveLog: (
  obj: ListTriggersRequest
) => any;
export declare const ListTriggersResponseFilterSensitiveLog: (
  obj: ListTriggersResponse
) => any;
export declare const ListWorkflowsRequestFilterSensitiveLog: (
  obj: ListWorkflowsRequest
) => any;
export declare const ListWorkflowsResponseFilterSensitiveLog: (
  obj: ListWorkflowsResponse
) => any;
export declare const PutDataCatalogEncryptionSettingsRequestFilterSensitiveLog: (
  obj: PutDataCatalogEncryptionSettingsRequest
) => any;
export declare const PutDataCatalogEncryptionSettingsResponseFilterSensitiveLog: (
  obj: PutDataCatalogEncryptionSettingsResponse
) => any;
export declare const PutResourcePolicyRequestFilterSensitiveLog: (
  obj: PutResourcePolicyRequest
) => any;
export declare const PutResourcePolicyResponseFilterSensitiveLog: (
  obj: PutResourcePolicyResponse
) => any;
export declare const MetadataKeyValuePairFilterSensitiveLog: (
  obj: MetadataKeyValuePair
) => any;
export declare const PutSchemaVersionMetadataInputFilterSensitiveLog: (
  obj: PutSchemaVersionMetadataInput
) => any;
export declare const PutSchemaVersionMetadataResponseFilterSensitiveLog: (
  obj: PutSchemaVersionMetadataResponse
) => any;
export declare const PutWorkflowRunPropertiesRequestFilterSensitiveLog: (
  obj: PutWorkflowRunPropertiesRequest
) => any;
export declare const PutWorkflowRunPropertiesResponseFilterSensitiveLog: (
  obj: PutWorkflowRunPropertiesResponse
) => any;
export declare const QuerySchemaVersionMetadataInputFilterSensitiveLog: (
  obj: QuerySchemaVersionMetadataInput
) => any;
export declare const OtherMetadataValueListItemFilterSensitiveLog: (
  obj: OtherMetadataValueListItem
) => any;
export declare const MetadataInfoFilterSensitiveLog: (obj: MetadataInfo) => any;
export declare const QuerySchemaVersionMetadataResponseFilterSensitiveLog: (
  obj: QuerySchemaVersionMetadataResponse
) => any;
export declare const RegisterSchemaVersionInputFilterSensitiveLog: (
  obj: RegisterSchemaVersionInput
) => any;
export declare const RegisterSchemaVersionResponseFilterSensitiveLog: (
  obj: RegisterSchemaVersionResponse
) => any;
export declare const RemoveSchemaVersionMetadataInputFilterSensitiveLog: (
  obj: RemoveSchemaVersionMetadataInput
) => any;
export declare const RemoveSchemaVersionMetadataResponseFilterSensitiveLog: (
  obj: RemoveSchemaVersionMetadataResponse
) => any;
export declare const ResetJobBookmarkRequestFilterSensitiveLog: (
  obj: ResetJobBookmarkRequest
) => any;
export declare const ResetJobBookmarkResponseFilterSensitiveLog: (
  obj: ResetJobBookmarkResponse
) => any;
export declare const ResumeWorkflowRunRequestFilterSensitiveLog: (
  obj: ResumeWorkflowRunRequest
) => any;
export declare const ResumeWorkflowRunResponseFilterSensitiveLog: (
  obj: ResumeWorkflowRunResponse
) => any;
export declare const RunStatementRequestFilterSensitiveLog: (
  obj: RunStatementRequest
) => any;
export declare const RunStatementResponseFilterSensitiveLog: (
  obj: RunStatementResponse
) => any;
export declare const PropertyPredicateFilterSensitiveLog: (
  obj: PropertyPredicate
) => any;
export declare const SortCriterionFilterSensitiveLog: (
  obj: SortCriterion
) => any;
export declare const SearchTablesRequestFilterSensitiveLog: (
  obj: SearchTablesRequest
) => any;
export declare const SearchTablesResponseFilterSensitiveLog: (
  obj: SearchTablesResponse
) => any;
export declare const StartBlueprintRunRequestFilterSensitiveLog: (
  obj: StartBlueprintRunRequest
) => any;
export declare const StartBlueprintRunResponseFilterSensitiveLog: (
  obj: StartBlueprintRunResponse
) => any;
export declare const StartCrawlerRequestFilterSensitiveLog: (
  obj: StartCrawlerRequest
) => any;
export declare const StartCrawlerResponseFilterSensitiveLog: (
  obj: StartCrawlerResponse
) => any;
export declare const StartCrawlerScheduleRequestFilterSensitiveLog: (
  obj: StartCrawlerScheduleRequest
) => any;
export declare const StartCrawlerScheduleResponseFilterSensitiveLog: (
  obj: StartCrawlerScheduleResponse
) => any;
export declare const StartDataQualityRuleRecommendationRunRequestFilterSensitiveLog: (
  obj: StartDataQualityRuleRecommendationRunRequest
) => any;
export declare const StartDataQualityRuleRecommendationRunResponseFilterSensitiveLog: (
  obj: StartDataQualityRuleRecommendationRunResponse
) => any;
export declare const StartDataQualityRulesetEvaluationRunRequestFilterSensitiveLog: (
  obj: StartDataQualityRulesetEvaluationRunRequest
) => any;
export declare const StartDataQualityRulesetEvaluationRunResponseFilterSensitiveLog: (
  obj: StartDataQualityRulesetEvaluationRunResponse
) => any;
export declare const StartExportLabelsTaskRunRequestFilterSensitiveLog: (
  obj: StartExportLabelsTaskRunRequest
) => any;
export declare const StartExportLabelsTaskRunResponseFilterSensitiveLog: (
  obj: StartExportLabelsTaskRunResponse
) => any;
export declare const StartImportLabelsTaskRunRequestFilterSensitiveLog: (
  obj: StartImportLabelsTaskRunRequest
) => any;
export declare const StartImportLabelsTaskRunResponseFilterSensitiveLog: (
  obj: StartImportLabelsTaskRunResponse
) => any;
export declare const StartJobRunRequestFilterSensitiveLog: (
  obj: StartJobRunRequest
) => any;
export declare const StartJobRunResponseFilterSensitiveLog: (
  obj: StartJobRunResponse
) => any;
export declare const StartMLEvaluationTaskRunRequestFilterSensitiveLog: (
  obj: StartMLEvaluationTaskRunRequest
) => any;
export declare const StartMLEvaluationTaskRunResponseFilterSensitiveLog: (
  obj: StartMLEvaluationTaskRunResponse
) => any;
export declare const StartMLLabelingSetGenerationTaskRunRequestFilterSensitiveLog: (
  obj: StartMLLabelingSetGenerationTaskRunRequest
) => any;
export declare const StartMLLabelingSetGenerationTaskRunResponseFilterSensitiveLog: (
  obj: StartMLLabelingSetGenerationTaskRunResponse
) => any;
export declare const StartTriggerRequestFilterSensitiveLog: (
  obj: StartTriggerRequest
) => any;
export declare const StartTriggerResponseFilterSensitiveLog: (
  obj: StartTriggerResponse
) => any;
export declare const StartWorkflowRunRequestFilterSensitiveLog: (
  obj: StartWorkflowRunRequest
) => any;
export declare const StartWorkflowRunResponseFilterSensitiveLog: (
  obj: StartWorkflowRunResponse
) => any;
export declare const StopCrawlerRequestFilterSensitiveLog: (
  obj: StopCrawlerRequest
) => any;
export declare const StopCrawlerResponseFilterSensitiveLog: (
  obj: StopCrawlerResponse
) => any;
export declare const StopCrawlerScheduleRequestFilterSensitiveLog: (
  obj: StopCrawlerScheduleRequest
) => any;
export declare const StopCrawlerScheduleResponseFilterSensitiveLog: (
  obj: StopCrawlerScheduleResponse
) => any;
export declare const StopSessionRequestFilterSensitiveLog: (
  obj: StopSessionRequest
) => any;
export declare const StopSessionResponseFilterSensitiveLog: (
  obj: StopSessionResponse
) => any;
export declare const StopTriggerRequestFilterSensitiveLog: (
  obj: StopTriggerRequest
) => any;
export declare const StopTriggerResponseFilterSensitiveLog: (
  obj: StopTriggerResponse
) => any;
export declare const StopWorkflowRunRequestFilterSensitiveLog: (
  obj: StopWorkflowRunRequest
) => any;
export declare const StopWorkflowRunResponseFilterSensitiveLog: (
  obj: StopWorkflowRunResponse
) => any;
export declare const TagResourceRequestFilterSensitiveLog: (
  obj: TagResourceRequest
) => any;
export declare const TagResourceResponseFilterSensitiveLog: (
  obj: TagResourceResponse
) => any;
export declare const UntagResourceRequestFilterSensitiveLog: (
  obj: UntagResourceRequest
) => any;
export declare const UntagResourceResponseFilterSensitiveLog: (
  obj: UntagResourceResponse
) => any;
export declare const UpdateBlueprintRequestFilterSensitiveLog: (
  obj: UpdateBlueprintRequest
) => any;
export declare const UpdateBlueprintResponseFilterSensitiveLog: (
  obj: UpdateBlueprintResponse
) => any;
export declare const UpdateCsvClassifierRequestFilterSensitiveLog: (
  obj: UpdateCsvClassifierRequest
) => any;
export declare const UpdateGrokClassifierRequestFilterSensitiveLog: (
  obj: UpdateGrokClassifierRequest
) => any;
export declare const UpdateJsonClassifierRequestFilterSensitiveLog: (
  obj: UpdateJsonClassifierRequest
) => any;
export declare const UpdateXMLClassifierRequestFilterSensitiveLog: (
  obj: UpdateXMLClassifierRequest
) => any;
export declare const UpdateClassifierRequestFilterSensitiveLog: (
  obj: UpdateClassifierRequest
) => any;
export declare const UpdateClassifierResponseFilterSensitiveLog: (
  obj: UpdateClassifierResponse
) => any;
export declare const UpdateColumnStatisticsForPartitionRequestFilterSensitiveLog: (
  obj: UpdateColumnStatisticsForPartitionRequest
) => any;
export declare const ColumnStatisticsErrorFilterSensitiveLog: (
  obj: ColumnStatisticsError
) => any;
export declare const UpdateColumnStatisticsForPartitionResponseFilterSensitiveLog: (
  obj: UpdateColumnStatisticsForPartitionResponse
) => any;
export declare const UpdateColumnStatisticsForTableRequestFilterSensitiveLog: (
  obj: UpdateColumnStatisticsForTableRequest
) => any;
export declare const UpdateColumnStatisticsForTableResponseFilterSensitiveLog: (
  obj: UpdateColumnStatisticsForTableResponse
) => any;
export declare const UpdateConnectionRequestFilterSensitiveLog: (
  obj: UpdateConnectionRequest
) => any;
export declare const UpdateConnectionResponseFilterSensitiveLog: (
  obj: UpdateConnectionResponse
) => any;
export declare const UpdateCrawlerRequestFilterSensitiveLog: (
  obj: UpdateCrawlerRequest
) => any;
export declare const UpdateCrawlerResponseFilterSensitiveLog: (
  obj: UpdateCrawlerResponse
) => any;
export declare const UpdateCrawlerScheduleRequestFilterSensitiveLog: (
  obj: UpdateCrawlerScheduleRequest
) => any;
export declare const UpdateCrawlerScheduleResponseFilterSensitiveLog: (
  obj: UpdateCrawlerScheduleResponse
) => any;
export declare const UpdateDatabaseRequestFilterSensitiveLog: (
  obj: UpdateDatabaseRequest
) => any;
export declare const UpdateDatabaseResponseFilterSensitiveLog: (
  obj: UpdateDatabaseResponse
) => any;
export declare const UpdateDataQualityRulesetRequestFilterSensitiveLog: (
  obj: UpdateDataQualityRulesetRequest
) => any;
export declare const UpdateDataQualityRulesetResponseFilterSensitiveLog: (
  obj: UpdateDataQualityRulesetResponse
) => any;
export declare const DevEndpointCustomLibrariesFilterSensitiveLog: (
  obj: DevEndpointCustomLibraries
) => any;
export declare const UpdateDevEndpointRequestFilterSensitiveLog: (
  obj: UpdateDevEndpointRequest
) => any;
export declare const UpdateDevEndpointResponseFilterSensitiveLog: (
  obj: UpdateDevEndpointResponse
) => any;
export declare const UpdateJobResponseFilterSensitiveLog: (
  obj: UpdateJobResponse
) => any;
export declare const UpdateJobFromSourceControlRequestFilterSensitiveLog: (
  obj: UpdateJobFromSourceControlRequest
) => any;
export declare const UpdateJobFromSourceControlResponseFilterSensitiveLog: (
  obj: UpdateJobFromSourceControlResponse
) => any;
export declare const UpdateMLTransformRequestFilterSensitiveLog: (
  obj: UpdateMLTransformRequest
) => any;
export declare const UpdateMLTransformResponseFilterSensitiveLog: (
  obj: UpdateMLTransformResponse
) => any;
export declare const UpdatePartitionRequestFilterSensitiveLog: (
  obj: UpdatePartitionRequest
) => any;
export declare const UpdatePartitionResponseFilterSensitiveLog: (
  obj: UpdatePartitionResponse
) => any;
export declare const UpdateRegistryInputFilterSensitiveLog: (
  obj: UpdateRegistryInput
) => any;
export declare const UpdateRegistryResponseFilterSensitiveLog: (
  obj: UpdateRegistryResponse
) => any;
export declare const UpdateSchemaInputFilterSensitiveLog: (
  obj: UpdateSchemaInput
) => any;
export declare const UpdateSchemaResponseFilterSensitiveLog: (
  obj: UpdateSchemaResponse
) => any;
export declare const UpdateSourceControlFromJobRequestFilterSensitiveLog: (
  obj: UpdateSourceControlFromJobRequest
) => any;
export declare const UpdateSourceControlFromJobResponseFilterSensitiveLog: (
  obj: UpdateSourceControlFromJobResponse
) => any;
export declare const UpdateTableRequestFilterSensitiveLog: (
  obj: UpdateTableRequest
) => any;
export declare const UpdateTableResponseFilterSensitiveLog: (
  obj: UpdateTableResponse
) => any;
export declare const TriggerUpdateFilterSensitiveLog: (
  obj: TriggerUpdate
) => any;
export declare const UpdateTriggerRequestFilterSensitiveLog: (
  obj: UpdateTriggerRequest
) => any;
export declare const UpdateTriggerResponseFilterSensitiveLog: (
  obj: UpdateTriggerResponse
) => any;
export declare const UpdateUserDefinedFunctionRequestFilterSensitiveLog: (
  obj: UpdateUserDefinedFunctionRequest
) => any;
export declare const UpdateUserDefinedFunctionResponseFilterSensitiveLog: (
  obj: UpdateUserDefinedFunctionResponse
) => any;
export declare const UpdateWorkflowRequestFilterSensitiveLog: (
  obj: UpdateWorkflowRequest
) => any;
export declare const UpdateWorkflowResponseFilterSensitiveLog: (
  obj: UpdateWorkflowResponse
) => any;
export declare const MappingFilterSensitiveLog: (obj: Mapping) => any;
export declare const ApplyMappingFilterSensitiveLog: (obj: ApplyMapping) => any;
export declare const CodeGenConfigurationNodeFilterSensitiveLog: (
  obj: CodeGenConfigurationNode
) => any;
export declare const CreateJobRequestFilterSensitiveLog: (
  obj: CreateJobRequest
) => any;
export declare const JobFilterSensitiveLog: (obj: Job) => any;
export declare const JobUpdateFilterSensitiveLog: (obj: JobUpdate) => any;
export declare const GetJobResponseFilterSensitiveLog: (
  obj: GetJobResponse
) => any;
export declare const UpdateJobRequestFilterSensitiveLog: (
  obj: UpdateJobRequest
) => any;
export declare const BatchGetJobsResponseFilterSensitiveLog: (
  obj: BatchGetJobsResponse
) => any;
export declare const GetJobsResponseFilterSensitiveLog: (
  obj: GetJobsResponse
) => any;
