import { SENSITIVE_STRING } from "@aws-sdk/smithy-client";
import { GlueServiceException as __BaseException } from "./GlueServiceException";
export var CrawlerHistoryState;
(function (CrawlerHistoryState) {
    CrawlerHistoryState["COMPLETED"] = "COMPLETED";
    CrawlerHistoryState["FAILED"] = "FAILED";
    CrawlerHistoryState["RUNNING"] = "RUNNING";
    CrawlerHistoryState["STOPPED"] = "STOPPED";
})(CrawlerHistoryState || (CrawlerHistoryState = {}));
export var EnableHybridValues;
(function (EnableHybridValues) {
    EnableHybridValues["FALSE"] = "FALSE";
    EnableHybridValues["TRUE"] = "TRUE";
})(EnableHybridValues || (EnableHybridValues = {}));
export var ExistCondition;
(function (ExistCondition) {
    ExistCondition["MUST_EXIST"] = "MUST_EXIST";
    ExistCondition["NONE"] = "NONE";
    ExistCondition["NOT_EXIST"] = "NOT_EXIST";
})(ExistCondition || (ExistCondition = {}));
export class ConcurrentRunsExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConcurrentRunsExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConcurrentRunsExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConcurrentRunsExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class IllegalWorkflowStateException extends __BaseException {
    constructor(opts) {
        super({
            name: "IllegalWorkflowStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "IllegalWorkflowStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, IllegalWorkflowStateException.prototype);
        this.Message = opts.Message;
    }
}
export var Comparator;
(function (Comparator) {
    Comparator["EQUALS"] = "EQUALS";
    Comparator["GREATER_THAN"] = "GREATER_THAN";
    Comparator["GREATER_THAN_EQUALS"] = "GREATER_THAN_EQUALS";
    Comparator["LESS_THAN"] = "LESS_THAN";
    Comparator["LESS_THAN_EQUALS"] = "LESS_THAN_EQUALS";
})(Comparator || (Comparator = {}));
export var Sort;
(function (Sort) {
    Sort["ASCENDING"] = "ASC";
    Sort["DESCENDING"] = "DESC";
})(Sort || (Sort = {}));
export class IllegalBlueprintStateException extends __BaseException {
    constructor(opts) {
        super({
            name: "IllegalBlueprintStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "IllegalBlueprintStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, IllegalBlueprintStateException.prototype);
        this.Message = opts.Message;
    }
}
export class NoScheduleException extends __BaseException {
    constructor(opts) {
        super({
            name: "NoScheduleException",
            $fault: "client",
            ...opts,
        });
        this.name = "NoScheduleException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoScheduleException.prototype);
        this.Message = opts.Message;
    }
}
export class SchedulerRunningException extends __BaseException {
    constructor(opts) {
        super({
            name: "SchedulerRunningException",
            $fault: "client",
            ...opts,
        });
        this.name = "SchedulerRunningException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SchedulerRunningException.prototype);
        this.Message = opts.Message;
    }
}
export class MLTransformNotReadyException extends __BaseException {
    constructor(opts) {
        super({
            name: "MLTransformNotReadyException",
            $fault: "client",
            ...opts,
        });
        this.name = "MLTransformNotReadyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MLTransformNotReadyException.prototype);
        this.Message = opts.Message;
    }
}
export class CrawlerNotRunningException extends __BaseException {
    constructor(opts) {
        super({
            name: "CrawlerNotRunningException",
            $fault: "client",
            ...opts,
        });
        this.name = "CrawlerNotRunningException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CrawlerNotRunningException.prototype);
        this.Message = opts.Message;
    }
}
export class CrawlerStoppingException extends __BaseException {
    constructor(opts) {
        super({
            name: "CrawlerStoppingException",
            $fault: "client",
            ...opts,
        });
        this.name = "CrawlerStoppingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CrawlerStoppingException.prototype);
        this.Message = opts.Message;
    }
}
export class SchedulerNotRunningException extends __BaseException {
    constructor(opts) {
        super({
            name: "SchedulerNotRunningException",
            $fault: "client",
            ...opts,
        });
        this.name = "SchedulerNotRunningException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SchedulerNotRunningException.prototype);
        this.Message = opts.Message;
    }
}
export class VersionMismatchException extends __BaseException {
    constructor(opts) {
        super({
            name: "VersionMismatchException",
            $fault: "client",
            ...opts,
        });
        this.name = "VersionMismatchException";
        this.$fault = "client";
        Object.setPrototypeOf(this, VersionMismatchException.prototype);
        this.Message = opts.Message;
    }
}
export const CrawlsFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListCrawlsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CrawlerHistoryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListCrawlsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListCustomEntityTypesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListCustomEntityTypesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DataQualityResultFilterCriteriaFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDataQualityResultsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DataQualityResultDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDataQualityResultsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DataQualityRuleRecommendationRunFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDataQualityRuleRecommendationRunsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DataQualityRuleRecommendationRunDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDataQualityRuleRecommendationRunsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DataQualityRulesetEvaluationRunFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDataQualityRulesetEvaluationRunsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DataQualityRulesetEvaluationRunDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDataQualityRulesetEvaluationRunsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DataQualityRulesetFilterCriteriaFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDataQualityRulesetsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DataQualityRulesetListDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDataQualityRulesetsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDevEndpointsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListDevEndpointsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListJobsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListJobsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListMLTransformsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListMLTransformsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListRegistriesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegistryListItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListRegistriesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSchemasInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SchemaListItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSchemasResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSchemaVersionsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SchemaVersionListItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSchemaVersionsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSessionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSessionsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStatementsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStatementsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTriggersRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTriggersResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListWorkflowsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListWorkflowsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutDataCatalogEncryptionSettingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutDataCatalogEncryptionSettingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutResourcePolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutResourcePolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MetadataKeyValuePairFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutSchemaVersionMetadataInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutSchemaVersionMetadataResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutWorkflowRunPropertiesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutWorkflowRunPropertiesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const QuerySchemaVersionMetadataInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OtherMetadataValueListItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MetadataInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const QuerySchemaVersionMetadataResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegisterSchemaVersionInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegisterSchemaVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RemoveSchemaVersionMetadataInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RemoveSchemaVersionMetadataResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResetJobBookmarkRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResetJobBookmarkResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResumeWorkflowRunRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResumeWorkflowRunResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RunStatementRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RunStatementResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PropertyPredicateFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SortCriterionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SearchTablesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SearchTablesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartBlueprintRunRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartBlueprintRunResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartCrawlerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartCrawlerResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartCrawlerScheduleRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartCrawlerScheduleResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartDataQualityRuleRecommendationRunRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartDataQualityRuleRecommendationRunResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartDataQualityRulesetEvaluationRunRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartDataQualityRulesetEvaluationRunResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartExportLabelsTaskRunRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartExportLabelsTaskRunResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartImportLabelsTaskRunRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartImportLabelsTaskRunResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartJobRunRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartJobRunResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartMLEvaluationTaskRunRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartMLEvaluationTaskRunResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartMLLabelingSetGenerationTaskRunRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartMLLabelingSetGenerationTaskRunResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartTriggerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartTriggerResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartWorkflowRunRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartWorkflowRunResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopCrawlerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopCrawlerResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopCrawlerScheduleRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopCrawlerScheduleResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopSessionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopSessionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopTriggerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopTriggerResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopWorkflowRunRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopWorkflowRunResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TagResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UntagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UntagResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateBlueprintRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateBlueprintResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateCsvClassifierRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateGrokClassifierRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateJsonClassifierRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateXMLClassifierRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateClassifierRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateClassifierResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateColumnStatisticsForPartitionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ColumnStatisticsErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateColumnStatisticsForPartitionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateColumnStatisticsForTableRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateColumnStatisticsForTableResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateConnectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateConnectionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateCrawlerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateCrawlerResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateCrawlerScheduleRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateCrawlerScheduleResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateDatabaseRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateDatabaseResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateDataQualityRulesetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateDataQualityRulesetResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DevEndpointCustomLibrariesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateDevEndpointRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateDevEndpointResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateJobResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateJobFromSourceControlRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateJobFromSourceControlResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateMLTransformRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateMLTransformResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdatePartitionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdatePartitionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateRegistryInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateRegistryResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateSchemaInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateSchemaResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateSourceControlFromJobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateSourceControlFromJobResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateTableRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateTableResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TriggerUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateTriggerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateTriggerResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateUserDefinedFunctionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateUserDefinedFunctionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateWorkflowRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateWorkflowResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MappingFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ApplyMappingFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CodeGenConfigurationNodeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateJobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CodeGenConfigurationNodes && { CodeGenConfigurationNodes: SENSITIVE_STRING }),
});
export const JobFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CodeGenConfigurationNodes && { CodeGenConfigurationNodes: SENSITIVE_STRING }),
});
export const JobUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CodeGenConfigurationNodes && { CodeGenConfigurationNodes: SENSITIVE_STRING }),
});
export const GetJobResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Job && { Job: JobFilterSensitiveLog(obj.Job) }),
});
export const UpdateJobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.JobUpdate && { JobUpdate: JobUpdateFilterSensitiveLog(obj.JobUpdate) }),
});
export const BatchGetJobsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Jobs && { Jobs: obj.Jobs.map((item) => JobFilterSensitiveLog(item)) }),
});
export const GetJobsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Jobs && { Jobs: obj.Jobs.map((item) => JobFilterSensitiveLog(item)) }),
});
